//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OCRX.Model {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private T_OCRX_CODataTable tableT_OCRX_CO;
        
        private T_OCRX_USERSDataTable tableT_OCRX_USERS;
        
        private T_OCRX_VESSELDataTable tableT_OCRX_VESSEL;
        
        private T_OCRX_BARGEDataTable tableT_OCRX_BARGE;
        
        private T_OCRX_CNTDataTable tableT_OCRX_CNT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_OCRX_CO"] != null)) {
                    base.Tables.Add(new T_OCRX_CODataTable(ds.Tables["T_OCRX_CO"]));
                }
                if ((ds.Tables["T_OCRX_USERS"] != null)) {
                    base.Tables.Add(new T_OCRX_USERSDataTable(ds.Tables["T_OCRX_USERS"]));
                }
                if ((ds.Tables["T_OCRX_VESSEL"] != null)) {
                    base.Tables.Add(new T_OCRX_VESSELDataTable(ds.Tables["T_OCRX_VESSEL"]));
                }
                if ((ds.Tables["T_OCRX_BARGE"] != null)) {
                    base.Tables.Add(new T_OCRX_BARGEDataTable(ds.Tables["T_OCRX_BARGE"]));
                }
                if ((ds.Tables["T_OCRX_CNT"] != null)) {
                    base.Tables.Add(new T_OCRX_CNTDataTable(ds.Tables["T_OCRX_CNT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_OCRX_CODataTable T_OCRX_CO {
            get {
                return this.tableT_OCRX_CO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_OCRX_USERSDataTable T_OCRX_USERS {
            get {
                return this.tableT_OCRX_USERS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_OCRX_VESSELDataTable T_OCRX_VESSEL {
            get {
                return this.tableT_OCRX_VESSEL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_OCRX_BARGEDataTable T_OCRX_BARGE {
            get {
                return this.tableT_OCRX_BARGE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_OCRX_CNTDataTable T_OCRX_CNT {
            get {
                return this.tableT_OCRX_CNT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_OCRX_CO"] != null)) {
                    base.Tables.Add(new T_OCRX_CODataTable(ds.Tables["T_OCRX_CO"]));
                }
                if ((ds.Tables["T_OCRX_USERS"] != null)) {
                    base.Tables.Add(new T_OCRX_USERSDataTable(ds.Tables["T_OCRX_USERS"]));
                }
                if ((ds.Tables["T_OCRX_VESSEL"] != null)) {
                    base.Tables.Add(new T_OCRX_VESSELDataTable(ds.Tables["T_OCRX_VESSEL"]));
                }
                if ((ds.Tables["T_OCRX_BARGE"] != null)) {
                    base.Tables.Add(new T_OCRX_BARGEDataTable(ds.Tables["T_OCRX_BARGE"]));
                }
                if ((ds.Tables["T_OCRX_CNT"] != null)) {
                    base.Tables.Add(new T_OCRX_CNTDataTable(ds.Tables["T_OCRX_CNT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_OCRX_CO = ((T_OCRX_CODataTable)(base.Tables["T_OCRX_CO"]));
            if ((initTable == true)) {
                if ((this.tableT_OCRX_CO != null)) {
                    this.tableT_OCRX_CO.InitVars();
                }
            }
            this.tableT_OCRX_USERS = ((T_OCRX_USERSDataTable)(base.Tables["T_OCRX_USERS"]));
            if ((initTable == true)) {
                if ((this.tableT_OCRX_USERS != null)) {
                    this.tableT_OCRX_USERS.InitVars();
                }
            }
            this.tableT_OCRX_VESSEL = ((T_OCRX_VESSELDataTable)(base.Tables["T_OCRX_VESSEL"]));
            if ((initTable == true)) {
                if ((this.tableT_OCRX_VESSEL != null)) {
                    this.tableT_OCRX_VESSEL.InitVars();
                }
            }
            this.tableT_OCRX_BARGE = ((T_OCRX_BARGEDataTable)(base.Tables["T_OCRX_BARGE"]));
            if ((initTable == true)) {
                if ((this.tableT_OCRX_BARGE != null)) {
                    this.tableT_OCRX_BARGE.InitVars();
                }
            }
            this.tableT_OCRX_CNT = ((T_OCRX_CNTDataTable)(base.Tables["T_OCRX_CNT"]));
            if ((initTable == true)) {
                if ((this.tableT_OCRX_CNT != null)) {
                    this.tableT_OCRX_CNT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_OCRX_CO = new T_OCRX_CODataTable();
            base.Tables.Add(this.tableT_OCRX_CO);
            this.tableT_OCRX_USERS = new T_OCRX_USERSDataTable();
            base.Tables.Add(this.tableT_OCRX_USERS);
            this.tableT_OCRX_VESSEL = new T_OCRX_VESSELDataTable();
            base.Tables.Add(this.tableT_OCRX_VESSEL);
            this.tableT_OCRX_BARGE = new T_OCRX_BARGEDataTable();
            base.Tables.Add(this.tableT_OCRX_BARGE);
            this.tableT_OCRX_CNT = new T_OCRX_CNTDataTable();
            base.Tables.Add(this.tableT_OCRX_CNT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_OCRX_CO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_OCRX_USERS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_OCRX_VESSEL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_OCRX_BARGE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_OCRX_CNT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_OCRX_CORowChangeEventHandler(object sender, T_OCRX_CORowChangeEvent e);
        
        public delegate void T_OCRX_USERSRowChangeEventHandler(object sender, T_OCRX_USERSRowChangeEvent e);
        
        public delegate void T_OCRX_VESSELRowChangeEventHandler(object sender, T_OCRX_VESSELRowChangeEvent e);
        
        public delegate void T_OCRX_BARGERowChangeEventHandler(object sender, T_OCRX_BARGERowChangeEvent e);
        
        public delegate void T_OCRX_CNTRowChangeEventHandler(object sender, T_OCRX_CNTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_OCRX_CODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnCOMPANYNAME;
            
            private global::System.Data.DataColumn columnCREATEDBY;
            
            private global::System.Data.DataColumn columnCREATETIME;
            
            private global::System.Data.DataColumn columnUPDATEDBY;
            
            private global::System.Data.DataColumn columnUPDATETIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CODataTable() {
                this.TableName = "T_OCRX_CO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_CODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_OCRX_CODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYNAMEColumn {
                get {
                    return this.columnCOMPANYNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATEDBYColumn {
                get {
                    return this.columnCREATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATETIMEColumn {
                get {
                    return this.columnCREATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEDBYColumn {
                get {
                    return this.columnUPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATETIMEColumn {
                get {
                    return this.columnUPDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CORow this[int index] {
                get {
                    return ((T_OCRX_CORow)(this.Rows[index]));
                }
            }
            
            public event T_OCRX_CORowChangeEventHandler T_OCRX_CORowChanging;
            
            public event T_OCRX_CORowChangeEventHandler T_OCRX_CORowChanged;
            
            public event T_OCRX_CORowChangeEventHandler T_OCRX_CORowDeleting;
            
            public event T_OCRX_CORowChangeEventHandler T_OCRX_CORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_OCRX_CORow(T_OCRX_CORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CORow AddT_OCRX_CORow(string COMPANYCODE, string COMPANYNAME, string CREATEDBY, System.DateTime CREATETIME, string UPDATEDBY, System.DateTime UPDATETIME) {
                T_OCRX_CORow rowT_OCRX_CORow = ((T_OCRX_CORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMPANYCODE,
                        COMPANYNAME,
                        CREATEDBY,
                        CREATETIME,
                        UPDATEDBY,
                        UPDATETIME};
                rowT_OCRX_CORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_OCRX_CORow);
                return rowT_OCRX_CORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_OCRX_CODataTable cln = ((T_OCRX_CODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_OCRX_CODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnCOMPANYNAME = base.Columns["COMPANYNAME"];
                this.columnCREATEDBY = base.Columns["CREATEDBY"];
                this.columnCREATETIME = base.Columns["CREATETIME"];
                this.columnUPDATEDBY = base.Columns["UPDATEDBY"];
                this.columnUPDATETIME = base.Columns["UPDATETIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnCOMPANYNAME = new global::System.Data.DataColumn("COMPANYNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYNAME);
                this.columnCREATEDBY = new global::System.Data.DataColumn("CREATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDBY);
                this.columnCREATETIME = new global::System.Data.DataColumn("CREATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATETIME);
                this.columnUPDATEDBY = new global::System.Data.DataColumn("UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDBY);
                this.columnUPDATETIME = new global::System.Data.DataColumn("UPDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATETIME);
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnCOMPANYNAME.MaxLength = 100;
                this.columnCREATEDBY.MaxLength = 50;
                this.columnUPDATEDBY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CORow NewT_OCRX_CORow() {
                return ((T_OCRX_CORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_OCRX_CORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_OCRX_CORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_OCRX_CORowChanged != null)) {
                    this.T_OCRX_CORowChanged(this, new T_OCRX_CORowChangeEvent(((T_OCRX_CORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_OCRX_CORowChanging != null)) {
                    this.T_OCRX_CORowChanging(this, new T_OCRX_CORowChangeEvent(((T_OCRX_CORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_OCRX_CORowDeleted != null)) {
                    this.T_OCRX_CORowDeleted(this, new T_OCRX_CORowChangeEvent(((T_OCRX_CORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_OCRX_CORowDeleting != null)) {
                    this.T_OCRX_CORowDeleting(this, new T_OCRX_CORowChangeEvent(((T_OCRX_CORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_OCRX_CORow(T_OCRX_CORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_OCRX_CODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_OCRX_USERSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnUSERID;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnCREATEDBY;
            
            private global::System.Data.DataColumn columnCREATETIME;
            
            private global::System.Data.DataColumn columnUPDATEDBY;
            
            private global::System.Data.DataColumn columnUPDATETIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_USERSDataTable() {
                this.TableName = "T_OCRX_USERS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_USERSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_OCRX_USERSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn USERIDColumn {
                get {
                    return this.columnUSERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATEDBYColumn {
                get {
                    return this.columnCREATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATETIMEColumn {
                get {
                    return this.columnCREATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEDBYColumn {
                get {
                    return this.columnUPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATETIMEColumn {
                get {
                    return this.columnUPDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_USERSRow this[int index] {
                get {
                    return ((T_OCRX_USERSRow)(this.Rows[index]));
                }
            }
            
            public event T_OCRX_USERSRowChangeEventHandler T_OCRX_USERSRowChanging;
            
            public event T_OCRX_USERSRowChangeEventHandler T_OCRX_USERSRowChanged;
            
            public event T_OCRX_USERSRowChangeEventHandler T_OCRX_USERSRowDeleting;
            
            public event T_OCRX_USERSRowChangeEventHandler T_OCRX_USERSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_OCRX_USERSRow(T_OCRX_USERSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_USERSRow AddT_OCRX_USERSRow(string USERID, string COMPANYCODE, string CREATEDBY, System.DateTime CREATETIME, string UPDATEDBY, System.DateTime UPDATETIME) {
                T_OCRX_USERSRow rowT_OCRX_USERSRow = ((T_OCRX_USERSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        USERID,
                        COMPANYCODE,
                        CREATEDBY,
                        CREATETIME,
                        UPDATEDBY,
                        UPDATETIME};
                rowT_OCRX_USERSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_OCRX_USERSRow);
                return rowT_OCRX_USERSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_OCRX_USERSDataTable cln = ((T_OCRX_USERSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_OCRX_USERSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUSERID = base.Columns["USERID"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnCREATEDBY = base.Columns["CREATEDBY"];
                this.columnCREATETIME = base.Columns["CREATETIME"];
                this.columnUPDATEDBY = base.Columns["UPDATEDBY"];
                this.columnUPDATETIME = base.Columns["UPDATETIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUSERID = new global::System.Data.DataColumn("USERID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUSERID);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnCREATEDBY = new global::System.Data.DataColumn("CREATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDBY);
                this.columnCREATETIME = new global::System.Data.DataColumn("CREATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATETIME);
                this.columnUPDATEDBY = new global::System.Data.DataColumn("UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDBY);
                this.columnUPDATETIME = new global::System.Data.DataColumn("UPDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATETIME);
                this.columnUSERID.AllowDBNull = false;
                this.columnUSERID.MaxLength = 50;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnCREATEDBY.MaxLength = 50;
                this.columnUPDATEDBY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_USERSRow NewT_OCRX_USERSRow() {
                return ((T_OCRX_USERSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_OCRX_USERSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_OCRX_USERSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_OCRX_USERSRowChanged != null)) {
                    this.T_OCRX_USERSRowChanged(this, new T_OCRX_USERSRowChangeEvent(((T_OCRX_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_OCRX_USERSRowChanging != null)) {
                    this.T_OCRX_USERSRowChanging(this, new T_OCRX_USERSRowChangeEvent(((T_OCRX_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_OCRX_USERSRowDeleted != null)) {
                    this.T_OCRX_USERSRowDeleted(this, new T_OCRX_USERSRowChangeEvent(((T_OCRX_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_OCRX_USERSRowDeleting != null)) {
                    this.T_OCRX_USERSRowDeleting(this, new T_OCRX_USERSRowChangeEvent(((T_OCRX_USERSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_OCRX_USERSRow(T_OCRX_USERSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_OCRX_USERSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_OCRX_VESSELDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnSERVICECODE;
            
            private global::System.Data.DataColumn columnLINECODE;
            
            private global::System.Data.DataColumn columnCREATEDBY;
            
            private global::System.Data.DataColumn columnCREATETIME;
            
            private global::System.Data.DataColumn columnUPDATEDBY;
            
            private global::System.Data.DataColumn columnUPDATETIME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_VESSELDataTable() {
                this.TableName = "T_OCRX_VESSEL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_VESSELDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_OCRX_VESSELDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICECODEColumn {
                get {
                    return this.columnSERVICECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LINECODEColumn {
                get {
                    return this.columnLINECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATEDBYColumn {
                get {
                    return this.columnCREATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATETIMEColumn {
                get {
                    return this.columnCREATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEDBYColumn {
                get {
                    return this.columnUPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATETIMEColumn {
                get {
                    return this.columnUPDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_VESSELRow this[int index] {
                get {
                    return ((T_OCRX_VESSELRow)(this.Rows[index]));
                }
            }
            
            public event T_OCRX_VESSELRowChangeEventHandler T_OCRX_VESSELRowChanging;
            
            public event T_OCRX_VESSELRowChangeEventHandler T_OCRX_VESSELRowChanged;
            
            public event T_OCRX_VESSELRowChangeEventHandler T_OCRX_VESSELRowDeleting;
            
            public event T_OCRX_VESSELRowChangeEventHandler T_OCRX_VESSELRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_OCRX_VESSELRow(T_OCRX_VESSELRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_VESSELRow AddT_OCRX_VESSELRow(string COMPANYCODE, string SERVICECODE, string LINECODE, string CREATEDBY, System.DateTime CREATETIME, string UPDATEDBY, System.DateTime UPDATETIME) {
                T_OCRX_VESSELRow rowT_OCRX_VESSELRow = ((T_OCRX_VESSELRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMPANYCODE,
                        SERVICECODE,
                        LINECODE,
                        CREATEDBY,
                        CREATETIME,
                        UPDATEDBY,
                        UPDATETIME};
                rowT_OCRX_VESSELRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_OCRX_VESSELRow);
                return rowT_OCRX_VESSELRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_OCRX_VESSELDataTable cln = ((T_OCRX_VESSELDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_OCRX_VESSELDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnSERVICECODE = base.Columns["SERVICECODE"];
                this.columnLINECODE = base.Columns["LINECODE"];
                this.columnCREATEDBY = base.Columns["CREATEDBY"];
                this.columnCREATETIME = base.Columns["CREATETIME"];
                this.columnUPDATEDBY = base.Columns["UPDATEDBY"];
                this.columnUPDATETIME = base.Columns["UPDATETIME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnSERVICECODE = new global::System.Data.DataColumn("SERVICECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICECODE);
                this.columnLINECODE = new global::System.Data.DataColumn("LINECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINECODE);
                this.columnCREATEDBY = new global::System.Data.DataColumn("CREATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDBY);
                this.columnCREATETIME = new global::System.Data.DataColumn("CREATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATETIME);
                this.columnUPDATEDBY = new global::System.Data.DataColumn("UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDBY);
                this.columnUPDATETIME = new global::System.Data.DataColumn("UPDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATETIME);
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnSERVICECODE.AllowDBNull = false;
                this.columnSERVICECODE.MaxLength = 20;
                this.columnLINECODE.MaxLength = 200;
                this.columnCREATEDBY.MaxLength = 50;
                this.columnUPDATEDBY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_VESSELRow NewT_OCRX_VESSELRow() {
                return ((T_OCRX_VESSELRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_OCRX_VESSELRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_OCRX_VESSELRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_OCRX_VESSELRowChanged != null)) {
                    this.T_OCRX_VESSELRowChanged(this, new T_OCRX_VESSELRowChangeEvent(((T_OCRX_VESSELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_OCRX_VESSELRowChanging != null)) {
                    this.T_OCRX_VESSELRowChanging(this, new T_OCRX_VESSELRowChangeEvent(((T_OCRX_VESSELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_OCRX_VESSELRowDeleted != null)) {
                    this.T_OCRX_VESSELRowDeleted(this, new T_OCRX_VESSELRowChangeEvent(((T_OCRX_VESSELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_OCRX_VESSELRowDeleting != null)) {
                    this.T_OCRX_VESSELRowDeleting(this, new T_OCRX_VESSELRowChangeEvent(((T_OCRX_VESSELRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_OCRX_VESSELRow(T_OCRX_VESSELRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_OCRX_VESSELDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_OCRX_BARGEDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnSHIPAGENT;
            
            private global::System.Data.DataColumn columnSHIPOWNER;
            
            private global::System.Data.DataColumn columnCREATEDBY;
            
            private global::System.Data.DataColumn columnCREATETIME;
            
            private global::System.Data.DataColumn columnUPDATEDBY;
            
            private global::System.Data.DataColumn columnUPDATETIME;
            
            private global::System.Data.DataColumn columnBERTHPLANNO;
            
            private global::System.Data.DataColumn columnSHIP_CODE;
            
            private global::System.Data.DataColumn columnIN_VOYAGE_CODE;
            
            private global::System.Data.DataColumn columnOUT_VOYAGE_CODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_BARGEDataTable() {
                this.TableName = "T_OCRX_BARGE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_BARGEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_OCRX_BARGEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPAGENTColumn {
                get {
                    return this.columnSHIPAGENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPOWNERColumn {
                get {
                    return this.columnSHIPOWNER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATEDBYColumn {
                get {
                    return this.columnCREATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATETIMEColumn {
                get {
                    return this.columnCREATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATEDBYColumn {
                get {
                    return this.columnUPDATEDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATETIMEColumn {
                get {
                    return this.columnUPDATETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BERTHPLANNOColumn {
                get {
                    return this.columnBERTHPLANNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_CODEColumn {
                get {
                    return this.columnSHIP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IN_VOYAGE_CODEColumn {
                get {
                    return this.columnIN_VOYAGE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OUT_VOYAGE_CODEColumn {
                get {
                    return this.columnOUT_VOYAGE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_BARGERow this[int index] {
                get {
                    return ((T_OCRX_BARGERow)(this.Rows[index]));
                }
            }
            
            public event T_OCRX_BARGERowChangeEventHandler T_OCRX_BARGERowChanging;
            
            public event T_OCRX_BARGERowChangeEventHandler T_OCRX_BARGERowChanged;
            
            public event T_OCRX_BARGERowChangeEventHandler T_OCRX_BARGERowDeleting;
            
            public event T_OCRX_BARGERowChangeEventHandler T_OCRX_BARGERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_OCRX_BARGERow(T_OCRX_BARGERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_BARGERow AddT_OCRX_BARGERow(string COMPANYCODE, string SHIPAGENT, string SHIPOWNER, string CREATEDBY, System.DateTime CREATETIME, string UPDATEDBY, System.DateTime UPDATETIME, decimal BERTHPLANNO, string SHIP_CODE, string IN_VOYAGE_CODE, string OUT_VOYAGE_CODE) {
                T_OCRX_BARGERow rowT_OCRX_BARGERow = ((T_OCRX_BARGERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMPANYCODE,
                        SHIPAGENT,
                        SHIPOWNER,
                        CREATEDBY,
                        CREATETIME,
                        UPDATEDBY,
                        UPDATETIME,
                        BERTHPLANNO,
                        SHIP_CODE,
                        IN_VOYAGE_CODE,
                        OUT_VOYAGE_CODE};
                rowT_OCRX_BARGERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_OCRX_BARGERow);
                return rowT_OCRX_BARGERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_OCRX_BARGEDataTable cln = ((T_OCRX_BARGEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_OCRX_BARGEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnSHIPAGENT = base.Columns["SHIPAGENT"];
                this.columnSHIPOWNER = base.Columns["SHIPOWNER"];
                this.columnCREATEDBY = base.Columns["CREATEDBY"];
                this.columnCREATETIME = base.Columns["CREATETIME"];
                this.columnUPDATEDBY = base.Columns["UPDATEDBY"];
                this.columnUPDATETIME = base.Columns["UPDATETIME"];
                this.columnBERTHPLANNO = base.Columns["BERTHPLANNO"];
                this.columnSHIP_CODE = base.Columns["SHIP_CODE"];
                this.columnIN_VOYAGE_CODE = base.Columns["IN_VOYAGE_CODE"];
                this.columnOUT_VOYAGE_CODE = base.Columns["OUT_VOYAGE_CODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnSHIPAGENT = new global::System.Data.DataColumn("SHIPAGENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPAGENT);
                this.columnSHIPOWNER = new global::System.Data.DataColumn("SHIPOWNER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPOWNER);
                this.columnCREATEDBY = new global::System.Data.DataColumn("CREATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATEDBY);
                this.columnCREATETIME = new global::System.Data.DataColumn("CREATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATETIME);
                this.columnUPDATEDBY = new global::System.Data.DataColumn("UPDATEDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATEDBY);
                this.columnUPDATETIME = new global::System.Data.DataColumn("UPDATETIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATETIME);
                this.columnBERTHPLANNO = new global::System.Data.DataColumn("BERTHPLANNO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBERTHPLANNO);
                this.columnSHIP_CODE = new global::System.Data.DataColumn("SHIP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_CODE);
                this.columnIN_VOYAGE_CODE = new global::System.Data.DataColumn("IN_VOYAGE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_VOYAGE_CODE);
                this.columnOUT_VOYAGE_CODE = new global::System.Data.DataColumn("OUT_VOYAGE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_VOYAGE_CODE);
                this.columnCOMPANYCODE.AllowDBNull = false;
                this.columnCOMPANYCODE.MaxLength = 10;
                this.columnSHIPAGENT.AllowDBNull = false;
                this.columnSHIPAGENT.MaxLength = 10;
                this.columnSHIPOWNER.MaxLength = 200;
                this.columnCREATEDBY.MaxLength = 50;
                this.columnUPDATEDBY.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_BARGERow NewT_OCRX_BARGERow() {
                return ((T_OCRX_BARGERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_OCRX_BARGERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_OCRX_BARGERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_OCRX_BARGERowChanged != null)) {
                    this.T_OCRX_BARGERowChanged(this, new T_OCRX_BARGERowChangeEvent(((T_OCRX_BARGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_OCRX_BARGERowChanging != null)) {
                    this.T_OCRX_BARGERowChanging(this, new T_OCRX_BARGERowChangeEvent(((T_OCRX_BARGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_OCRX_BARGERowDeleted != null)) {
                    this.T_OCRX_BARGERowDeleted(this, new T_OCRX_BARGERowChangeEvent(((T_OCRX_BARGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_OCRX_BARGERowDeleting != null)) {
                    this.T_OCRX_BARGERowDeleting(this, new T_OCRX_BARGERowChangeEvent(((T_OCRX_BARGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_OCRX_BARGERow(T_OCRX_BARGERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_OCRX_BARGEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_OCRX_CNTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDOCK_ID;
            
            private global::System.Data.DataColumn columnISARCHIVED;
            
            private global::System.Data.DataColumn columnCONTAINER_NO;
            
            private global::System.Data.DataColumn columnRCONTAINER_NO;
            
            private global::System.Data.DataColumn columnCONTAINER_SHAPE;
            
            private global::System.Data.DataColumn columnRCONTAINER_SHAPE;
            
            private global::System.Data.DataColumn columnCONTAINER_SIZE;
            
            private global::System.Data.DataColumn columnCTYPE;
            
            private global::System.Data.DataColumn columnDOCK_STATUS;
            
            private global::System.Data.DataColumn columnCSTATUS;
            
            private global::System.Data.DataColumn columnTRVALCRANE_ID;
            
            private global::System.Data.DataColumn columnTRVAL_NO;
            
            private global::System.Data.DataColumn columnCNAM;
            
            private global::System.Data.DataColumn columnENAM;
            
            private global::System.Data.DataColumn columnSHIP_CODE;
            
            private global::System.Data.DataColumn columnC_VOYAGE;
            
            private global::System.Data.DataColumn columnPIC_NUM;
            
            private global::System.Data.DataColumn columnMSG_INDEX;
            
            private global::System.Data.DataColumn columnCTIME;
            
            private global::System.Data.DataColumn columnPMS_ID;
            
            private global::System.Data.DataColumn columnCOPYTIME;
            
            private global::System.Data.DataColumn columnSTARTTIME;
            
            private global::System.Data.DataColumn columnFINISHTIME;
            
            private global::System.Data.DataColumn columnOPERATORNAME;
            
            private global::System.Data.DataColumn columnBERTH_NUM;
            
            private global::System.Data.DataColumn columnCONTAINERID;
            
            private global::System.Data.DataColumn columnCTOSERRORMSG;
            
            private global::System.Data.DataColumn columnCTOSERRORCODE;
            
            private global::System.Data.DataColumn columnEXCEPSTARTIME;
            
            private global::System.Data.DataColumn columnEXCEPFINISHTIME;
            
            private global::System.Data.DataColumn columnEXCEPUSER;
            
            private global::System.Data.DataColumn columnLINECODE;
            
            private global::System.Data.DataColumn columnCOMPANYCODE;
            
            private global::System.Data.DataColumn columnSERVICECODE;
            
            private global::System.Data.DataColumn columnSHIPAGENT;
            
            private global::System.Data.DataColumn columnINAIM;
            
            private global::System.Data.DataColumn columnLOCTYPE;
            
            private global::System.Data.DataColumn columnTERMINALLOCK;
            
            private global::System.Data.DataColumn columnFORMLOCK;
            
            private global::System.Data.DataColumn columnISBIND;
            
            private global::System.Data.DataColumn columnISDAMAGE;
            
            private global::System.Data.DataColumn columnISOVERTOP;
            
            private global::System.Data.DataColumn columnISIMDG;
            
            private global::System.Data.DataColumn columnISREEF;
            
            private global::System.Data.DataColumn columnMAINCONTAINERNO;
            
            private global::System.Data.DataColumn columnISOVERDIS;
            
            private global::System.Data.DataColumn columnSETUPTEMP;
            
            private global::System.Data.DataColumn columnEMPTYFULL;
            
            private global::System.Data.DataColumn columnCONTAINER_HEIGHT;
            
            private global::System.Data.DataColumn columnCONTAINERTYPE;
            
            private global::System.Data.DataColumn columnBINDSEQ;
            
            private global::System.Data.DataColumn columnDmg;
            
            private global::System.Data.DataColumn columnOVR;
            
            private global::System.Data.DataColumn columnOVL;
            
            private global::System.Data.DataColumn columnOVF;
            
            private global::System.Data.DataColumn columnOVA;
            
            private global::System.Data.DataColumn columnOVH;
            
            private global::System.Data.DataColumn columnImdgNum3;
            
            private global::System.Data.DataColumn columnImdg3;
            
            private global::System.Data.DataColumn columnImdgNum2;
            
            private global::System.Data.DataColumn columnImdg2;
            
            private global::System.Data.DataColumn columnImdgNum1;
            
            private global::System.Data.DataColumn columnImdg1;
            
            private global::System.Data.DataColumn columnSHIPOWNER;
            
            private global::System.Data.DataColumn columnDOCK_ID2;
            
            private global::System.Data.DataColumn columnLOADDIS;
            
            private global::System.Data.DataColumn columnTWOCNTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CNTDataTable() {
                this.TableName = "T_OCRX_CNT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_CNTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_OCRX_CNTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCK_IDColumn {
                get {
                    return this.columnDOCK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISARCHIVEDColumn {
                get {
                    return this.columnISARCHIVED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINER_NOColumn {
                get {
                    return this.columnCONTAINER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCONTAINER_NOColumn {
                get {
                    return this.columnRCONTAINER_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINER_SHAPEColumn {
                get {
                    return this.columnCONTAINER_SHAPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RCONTAINER_SHAPEColumn {
                get {
                    return this.columnRCONTAINER_SHAPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINER_SIZEColumn {
                get {
                    return this.columnCONTAINER_SIZE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTYPEColumn {
                get {
                    return this.columnCTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCK_STATUSColumn {
                get {
                    return this.columnDOCK_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CSTATUSColumn {
                get {
                    return this.columnCSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRVALCRANE_IDColumn {
                get {
                    return this.columnTRVALCRANE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRVAL_NOColumn {
                get {
                    return this.columnTRVAL_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CNAMColumn {
                get {
                    return this.columnCNAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ENAMColumn {
                get {
                    return this.columnENAM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_CODEColumn {
                get {
                    return this.columnSHIP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn C_VOYAGEColumn {
                get {
                    return this.columnC_VOYAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PIC_NUMColumn {
                get {
                    return this.columnPIC_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MSG_INDEXColumn {
                get {
                    return this.columnMSG_INDEX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTIMEColumn {
                get {
                    return this.columnCTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMS_IDColumn {
                get {
                    return this.columnPMS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COPYTIMEColumn {
                get {
                    return this.columnCOPYTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STARTTIMEColumn {
                get {
                    return this.columnSTARTTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FINISHTIMEColumn {
                get {
                    return this.columnFINISHTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPERATORNAMEColumn {
                get {
                    return this.columnOPERATORNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BERTH_NUMColumn {
                get {
                    return this.columnBERTH_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINERIDColumn {
                get {
                    return this.columnCONTAINERID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTOSERRORMSGColumn {
                get {
                    return this.columnCTOSERRORMSG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTOSERRORCODEColumn {
                get {
                    return this.columnCTOSERRORCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPSTARTIMEColumn {
                get {
                    return this.columnEXCEPSTARTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPFINISHTIMEColumn {
                get {
                    return this.columnEXCEPFINISHTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EXCEPUSERColumn {
                get {
                    return this.columnEXCEPUSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LINECODEColumn {
                get {
                    return this.columnLINECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMPANYCODEColumn {
                get {
                    return this.columnCOMPANYCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SERVICECODEColumn {
                get {
                    return this.columnSERVICECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPAGENTColumn {
                get {
                    return this.columnSHIPAGENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INAIMColumn {
                get {
                    return this.columnINAIM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOCTYPEColumn {
                get {
                    return this.columnLOCTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMINALLOCKColumn {
                get {
                    return this.columnTERMINALLOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FORMLOCKColumn {
                get {
                    return this.columnFORMLOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISBINDColumn {
                get {
                    return this.columnISBIND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISDAMAGEColumn {
                get {
                    return this.columnISDAMAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISOVERTOPColumn {
                get {
                    return this.columnISOVERTOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISIMDGColumn {
                get {
                    return this.columnISIMDG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISREEFColumn {
                get {
                    return this.columnISREEF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MAINCONTAINERNOColumn {
                get {
                    return this.columnMAINCONTAINERNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISOVERDISColumn {
                get {
                    return this.columnISOVERDIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SETUPTEMPColumn {
                get {
                    return this.columnSETUPTEMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EMPTYFULLColumn {
                get {
                    return this.columnEMPTYFULL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINER_HEIGHTColumn {
                get {
                    return this.columnCONTAINER_HEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTAINERTYPEColumn {
                get {
                    return this.columnCONTAINERTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BINDSEQColumn {
                get {
                    return this.columnBINDSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DmgColumn {
                get {
                    return this.columnDmg;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVRColumn {
                get {
                    return this.columnOVR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVLColumn {
                get {
                    return this.columnOVL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVFColumn {
                get {
                    return this.columnOVF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVAColumn {
                get {
                    return this.columnOVA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OVHColumn {
                get {
                    return this.columnOVH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImdgNum3Column {
                get {
                    return this.columnImdgNum3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Imdg3Column {
                get {
                    return this.columnImdg3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImdgNum2Column {
                get {
                    return this.columnImdgNum2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Imdg2Column {
                get {
                    return this.columnImdg2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ImdgNum1Column {
                get {
                    return this.columnImdgNum1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Imdg1Column {
                get {
                    return this.columnImdg1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPOWNERColumn {
                get {
                    return this.columnSHIPOWNER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DOCK_ID2Column {
                get {
                    return this.columnDOCK_ID2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOADDISColumn {
                get {
                    return this.columnLOADDIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWOCNTSColumn {
                get {
                    return this.columnTWOCNTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CNTRow this[int index] {
                get {
                    return ((T_OCRX_CNTRow)(this.Rows[index]));
                }
            }
            
            public event T_OCRX_CNTRowChangeEventHandler T_OCRX_CNTRowChanging;
            
            public event T_OCRX_CNTRowChangeEventHandler T_OCRX_CNTRowChanged;
            
            public event T_OCRX_CNTRowChangeEventHandler T_OCRX_CNTRowDeleting;
            
            public event T_OCRX_CNTRowChangeEventHandler T_OCRX_CNTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_OCRX_CNTRow(T_OCRX_CNTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CNTRow AddT_OCRX_CNTRow(
                        decimal DOCK_ID, 
                        string ISARCHIVED, 
                        string CONTAINER_NO, 
                        string RCONTAINER_NO, 
                        string CONTAINER_SHAPE, 
                        string RCONTAINER_SHAPE, 
                        decimal CONTAINER_SIZE, 
                        decimal CTYPE, 
                        decimal DOCK_STATUS, 
                        decimal CSTATUS, 
                        decimal TRVALCRANE_ID, 
                        string TRVAL_NO, 
                        string CNAM, 
                        string ENAM, 
                        string SHIP_CODE, 
                        string C_VOYAGE, 
                        decimal PIC_NUM, 
                        decimal MSG_INDEX, 
                        System.DateTime CTIME, 
                        decimal PMS_ID, 
                        System.DateTime COPYTIME, 
                        System.DateTime STARTTIME, 
                        System.DateTime FINISHTIME, 
                        string OPERATORNAME, 
                        string BERTH_NUM, 
                        decimal CONTAINERID, 
                        string CTOSERRORMSG, 
                        string CTOSERRORCODE, 
                        System.DateTime EXCEPSTARTIME, 
                        System.DateTime EXCEPFINISHTIME, 
                        string EXCEPUSER, 
                        string LINECODE, 
                        string COMPANYCODE, 
                        string SERVICECODE, 
                        string SHIPAGENT, 
                        string INAIM, 
                        string LOCTYPE, 
                        string TERMINALLOCK, 
                        string FORMLOCK, 
                        string ISBIND, 
                        string ISDAMAGE, 
                        string ISOVERTOP, 
                        string ISIMDG, 
                        string ISREEF, 
                        string MAINCONTAINERNO, 
                        string ISOVERDIS, 
                        string SETUPTEMP, 
                        string EMPTYFULL, 
                        decimal CONTAINER_HEIGHT, 
                        string CONTAINERTYPE, 
                        decimal BINDSEQ, 
                        string Dmg, 
                        decimal OVR, 
                        decimal OVL, 
                        decimal OVF, 
                        decimal OVA, 
                        decimal OVH, 
                        string ImdgNum3, 
                        string Imdg3, 
                        string ImdgNum2, 
                        string Imdg2, 
                        string ImdgNum1, 
                        string Imdg1, 
                        string SHIPOWNER, 
                        decimal DOCK_ID2, 
                        string LOADDIS, 
                        string TWOCNTS) {
                T_OCRX_CNTRow rowT_OCRX_CNTRow = ((T_OCRX_CNTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DOCK_ID,
                        ISARCHIVED,
                        CONTAINER_NO,
                        RCONTAINER_NO,
                        CONTAINER_SHAPE,
                        RCONTAINER_SHAPE,
                        CONTAINER_SIZE,
                        CTYPE,
                        DOCK_STATUS,
                        CSTATUS,
                        TRVALCRANE_ID,
                        TRVAL_NO,
                        CNAM,
                        ENAM,
                        SHIP_CODE,
                        C_VOYAGE,
                        PIC_NUM,
                        MSG_INDEX,
                        CTIME,
                        PMS_ID,
                        COPYTIME,
                        STARTTIME,
                        FINISHTIME,
                        OPERATORNAME,
                        BERTH_NUM,
                        CONTAINERID,
                        CTOSERRORMSG,
                        CTOSERRORCODE,
                        EXCEPSTARTIME,
                        EXCEPFINISHTIME,
                        EXCEPUSER,
                        LINECODE,
                        COMPANYCODE,
                        SERVICECODE,
                        SHIPAGENT,
                        INAIM,
                        LOCTYPE,
                        TERMINALLOCK,
                        FORMLOCK,
                        ISBIND,
                        ISDAMAGE,
                        ISOVERTOP,
                        ISIMDG,
                        ISREEF,
                        MAINCONTAINERNO,
                        ISOVERDIS,
                        SETUPTEMP,
                        EMPTYFULL,
                        CONTAINER_HEIGHT,
                        CONTAINERTYPE,
                        BINDSEQ,
                        Dmg,
                        OVR,
                        OVL,
                        OVF,
                        OVA,
                        OVH,
                        ImdgNum3,
                        Imdg3,
                        ImdgNum2,
                        Imdg2,
                        ImdgNum1,
                        Imdg1,
                        SHIPOWNER,
                        DOCK_ID2,
                        LOADDIS,
                        TWOCNTS};
                rowT_OCRX_CNTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_OCRX_CNTRow);
                return rowT_OCRX_CNTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_OCRX_CNTDataTable cln = ((T_OCRX_CNTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_OCRX_CNTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDOCK_ID = base.Columns["DOCK_ID"];
                this.columnISARCHIVED = base.Columns["ISARCHIVED"];
                this.columnCONTAINER_NO = base.Columns["CONTAINER_NO"];
                this.columnRCONTAINER_NO = base.Columns["RCONTAINER_NO"];
                this.columnCONTAINER_SHAPE = base.Columns["CONTAINER_SHAPE"];
                this.columnRCONTAINER_SHAPE = base.Columns["RCONTAINER_SHAPE"];
                this.columnCONTAINER_SIZE = base.Columns["CONTAINER_SIZE"];
                this.columnCTYPE = base.Columns["CTYPE"];
                this.columnDOCK_STATUS = base.Columns["DOCK_STATUS"];
                this.columnCSTATUS = base.Columns["CSTATUS"];
                this.columnTRVALCRANE_ID = base.Columns["TRVALCRANE_ID"];
                this.columnTRVAL_NO = base.Columns["TRVAL_NO"];
                this.columnCNAM = base.Columns["CNAM"];
                this.columnENAM = base.Columns["ENAM"];
                this.columnSHIP_CODE = base.Columns["SHIP_CODE"];
                this.columnC_VOYAGE = base.Columns["C_VOYAGE"];
                this.columnPIC_NUM = base.Columns["PIC_NUM"];
                this.columnMSG_INDEX = base.Columns["MSG_INDEX"];
                this.columnCTIME = base.Columns["CTIME"];
                this.columnPMS_ID = base.Columns["PMS_ID"];
                this.columnCOPYTIME = base.Columns["COPYTIME"];
                this.columnSTARTTIME = base.Columns["STARTTIME"];
                this.columnFINISHTIME = base.Columns["FINISHTIME"];
                this.columnOPERATORNAME = base.Columns["OPERATORNAME"];
                this.columnBERTH_NUM = base.Columns["BERTH_NUM"];
                this.columnCONTAINERID = base.Columns["CONTAINERID"];
                this.columnCTOSERRORMSG = base.Columns["CTOSERRORMSG"];
                this.columnCTOSERRORCODE = base.Columns["CTOSERRORCODE"];
                this.columnEXCEPSTARTIME = base.Columns["EXCEPSTARTIME"];
                this.columnEXCEPFINISHTIME = base.Columns["EXCEPFINISHTIME"];
                this.columnEXCEPUSER = base.Columns["EXCEPUSER"];
                this.columnLINECODE = base.Columns["LINECODE"];
                this.columnCOMPANYCODE = base.Columns["COMPANYCODE"];
                this.columnSERVICECODE = base.Columns["SERVICECODE"];
                this.columnSHIPAGENT = base.Columns["SHIPAGENT"];
                this.columnINAIM = base.Columns["INAIM"];
                this.columnLOCTYPE = base.Columns["LOCTYPE"];
                this.columnTERMINALLOCK = base.Columns["TERMINALLOCK"];
                this.columnFORMLOCK = base.Columns["FORMLOCK"];
                this.columnISBIND = base.Columns["ISBIND"];
                this.columnISDAMAGE = base.Columns["ISDAMAGE"];
                this.columnISOVERTOP = base.Columns["ISOVERTOP"];
                this.columnISIMDG = base.Columns["ISIMDG"];
                this.columnISREEF = base.Columns["ISREEF"];
                this.columnMAINCONTAINERNO = base.Columns["MAINCONTAINERNO"];
                this.columnISOVERDIS = base.Columns["ISOVERDIS"];
                this.columnSETUPTEMP = base.Columns["SETUPTEMP"];
                this.columnEMPTYFULL = base.Columns["EMPTYFULL"];
                this.columnCONTAINER_HEIGHT = base.Columns["CONTAINER_HEIGHT"];
                this.columnCONTAINERTYPE = base.Columns["CONTAINERTYPE"];
                this.columnBINDSEQ = base.Columns["BINDSEQ"];
                this.columnDmg = base.Columns["Dmg"];
                this.columnOVR = base.Columns["OVR"];
                this.columnOVL = base.Columns["OVL"];
                this.columnOVF = base.Columns["OVF"];
                this.columnOVA = base.Columns["OVA"];
                this.columnOVH = base.Columns["OVH"];
                this.columnImdgNum3 = base.Columns["ImdgNum3"];
                this.columnImdg3 = base.Columns["Imdg3"];
                this.columnImdgNum2 = base.Columns["ImdgNum2"];
                this.columnImdg2 = base.Columns["Imdg2"];
                this.columnImdgNum1 = base.Columns["ImdgNum1"];
                this.columnImdg1 = base.Columns["Imdg1"];
                this.columnSHIPOWNER = base.Columns["SHIPOWNER"];
                this.columnDOCK_ID2 = base.Columns["DOCK_ID2"];
                this.columnLOADDIS = base.Columns["LOADDIS"];
                this.columnTWOCNTS = base.Columns["TWOCNTS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDOCK_ID = new global::System.Data.DataColumn("DOCK_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCK_ID);
                this.columnISARCHIVED = new global::System.Data.DataColumn("ISARCHIVED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISARCHIVED);
                this.columnCONTAINER_NO = new global::System.Data.DataColumn("CONTAINER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_NO);
                this.columnRCONTAINER_NO = new global::System.Data.DataColumn("RCONTAINER_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCONTAINER_NO);
                this.columnCONTAINER_SHAPE = new global::System.Data.DataColumn("CONTAINER_SHAPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_SHAPE);
                this.columnRCONTAINER_SHAPE = new global::System.Data.DataColumn("RCONTAINER_SHAPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRCONTAINER_SHAPE);
                this.columnCONTAINER_SIZE = new global::System.Data.DataColumn("CONTAINER_SIZE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_SIZE);
                this.columnCTYPE = new global::System.Data.DataColumn("CTYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTYPE);
                this.columnDOCK_STATUS = new global::System.Data.DataColumn("DOCK_STATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCK_STATUS);
                this.columnCSTATUS = new global::System.Data.DataColumn("CSTATUS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCSTATUS);
                this.columnTRVALCRANE_ID = new global::System.Data.DataColumn("TRVALCRANE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRVALCRANE_ID);
                this.columnTRVAL_NO = new global::System.Data.DataColumn("TRVAL_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRVAL_NO);
                this.columnCNAM = new global::System.Data.DataColumn("CNAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCNAM);
                this.columnENAM = new global::System.Data.DataColumn("ENAM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnENAM);
                this.columnSHIP_CODE = new global::System.Data.DataColumn("SHIP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_CODE);
                this.columnC_VOYAGE = new global::System.Data.DataColumn("C_VOYAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_VOYAGE);
                this.columnPIC_NUM = new global::System.Data.DataColumn("PIC_NUM", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPIC_NUM);
                this.columnMSG_INDEX = new global::System.Data.DataColumn("MSG_INDEX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSG_INDEX);
                this.columnCTIME = new global::System.Data.DataColumn("CTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTIME);
                this.columnPMS_ID = new global::System.Data.DataColumn("PMS_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPMS_ID);
                this.columnCOPYTIME = new global::System.Data.DataColumn("COPYTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOPYTIME);
                this.columnSTARTTIME = new global::System.Data.DataColumn("STARTTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTARTTIME);
                this.columnFINISHTIME = new global::System.Data.DataColumn("FINISHTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFINISHTIME);
                this.columnOPERATORNAME = new global::System.Data.DataColumn("OPERATORNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATORNAME);
                this.columnBERTH_NUM = new global::System.Data.DataColumn("BERTH_NUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBERTH_NUM);
                this.columnCONTAINERID = new global::System.Data.DataColumn("CONTAINERID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINERID);
                this.columnCTOSERRORMSG = new global::System.Data.DataColumn("CTOSERRORMSG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTOSERRORMSG);
                this.columnCTOSERRORCODE = new global::System.Data.DataColumn("CTOSERRORCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTOSERRORCODE);
                this.columnEXCEPSTARTIME = new global::System.Data.DataColumn("EXCEPSTARTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPSTARTIME);
                this.columnEXCEPFINISHTIME = new global::System.Data.DataColumn("EXCEPFINISHTIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPFINISHTIME);
                this.columnEXCEPUSER = new global::System.Data.DataColumn("EXCEPUSER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXCEPUSER);
                this.columnLINECODE = new global::System.Data.DataColumn("LINECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLINECODE);
                this.columnCOMPANYCODE = new global::System.Data.DataColumn("COMPANYCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPANYCODE);
                this.columnSERVICECODE = new global::System.Data.DataColumn("SERVICECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERVICECODE);
                this.columnSHIPAGENT = new global::System.Data.DataColumn("SHIPAGENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPAGENT);
                this.columnINAIM = new global::System.Data.DataColumn("INAIM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINAIM);
                this.columnLOCTYPE = new global::System.Data.DataColumn("LOCTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOCTYPE);
                this.columnTERMINALLOCK = new global::System.Data.DataColumn("TERMINALLOCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMINALLOCK);
                this.columnFORMLOCK = new global::System.Data.DataColumn("FORMLOCK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMLOCK);
                this.columnISBIND = new global::System.Data.DataColumn("ISBIND", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISBIND);
                this.columnISDAMAGE = new global::System.Data.DataColumn("ISDAMAGE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISDAMAGE);
                this.columnISOVERTOP = new global::System.Data.DataColumn("ISOVERTOP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISOVERTOP);
                this.columnISIMDG = new global::System.Data.DataColumn("ISIMDG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISIMDG);
                this.columnISREEF = new global::System.Data.DataColumn("ISREEF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISREEF);
                this.columnMAINCONTAINERNO = new global::System.Data.DataColumn("MAINCONTAINERNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAINCONTAINERNO);
                this.columnISOVERDIS = new global::System.Data.DataColumn("ISOVERDIS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISOVERDIS);
                this.columnSETUPTEMP = new global::System.Data.DataColumn("SETUPTEMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSETUPTEMP);
                this.columnEMPTYFULL = new global::System.Data.DataColumn("EMPTYFULL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPTYFULL);
                this.columnCONTAINER_HEIGHT = new global::System.Data.DataColumn("CONTAINER_HEIGHT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINER_HEIGHT);
                this.columnCONTAINERTYPE = new global::System.Data.DataColumn("CONTAINERTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTAINERTYPE);
                this.columnBINDSEQ = new global::System.Data.DataColumn("BINDSEQ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBINDSEQ);
                this.columnDmg = new global::System.Data.DataColumn("Dmg", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDmg);
                this.columnOVR = new global::System.Data.DataColumn("OVR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVR);
                this.columnOVL = new global::System.Data.DataColumn("OVL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVL);
                this.columnOVF = new global::System.Data.DataColumn("OVF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVF);
                this.columnOVA = new global::System.Data.DataColumn("OVA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVA);
                this.columnOVH = new global::System.Data.DataColumn("OVH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVH);
                this.columnImdgNum3 = new global::System.Data.DataColumn("ImdgNum3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImdgNum3);
                this.columnImdg3 = new global::System.Data.DataColumn("Imdg3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImdg3);
                this.columnImdgNum2 = new global::System.Data.DataColumn("ImdgNum2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImdgNum2);
                this.columnImdg2 = new global::System.Data.DataColumn("Imdg2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImdg2);
                this.columnImdgNum1 = new global::System.Data.DataColumn("ImdgNum1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImdgNum1);
                this.columnImdg1 = new global::System.Data.DataColumn("Imdg1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImdg1);
                this.columnSHIPOWNER = new global::System.Data.DataColumn("SHIPOWNER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPOWNER);
                this.columnDOCK_ID2 = new global::System.Data.DataColumn("DOCK_ID2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOCK_ID2);
                this.columnLOADDIS = new global::System.Data.DataColumn("LOADDIS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOADDIS);
                this.columnTWOCNTS = new global::System.Data.DataColumn("TWOCNTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWOCNTS);
                this.columnDOCK_ID.AllowDBNull = false;
                this.columnISARCHIVED.AllowDBNull = false;
                this.columnISARCHIVED.MaxLength = 1;
                this.columnCONTAINER_NO.MaxLength = 20;
                this.columnRCONTAINER_NO.MaxLength = 20;
                this.columnCONTAINER_SHAPE.MaxLength = 20;
                this.columnRCONTAINER_SHAPE.MaxLength = 20;
                this.columnTRVAL_NO.MaxLength = 8;
                this.columnCNAM.MaxLength = 64;
                this.columnENAM.MaxLength = 64;
                this.columnSHIP_CODE.MaxLength = 64;
                this.columnC_VOYAGE.MaxLength = 40;
                this.columnOPERATORNAME.MaxLength = 50;
                this.columnBERTH_NUM.MaxLength = 8;
                this.columnCONTAINERID.DefaultValue = ((decimal)(0m));
                this.columnCTOSERRORMSG.MaxLength = 500;
                this.columnCTOSERRORCODE.MaxLength = 50;
                this.columnEXCEPUSER.MaxLength = 50;
                this.columnLINECODE.MaxLength = 50;
                this.columnCOMPANYCODE.MaxLength = 20;
                this.columnSERVICECODE.MaxLength = 20;
                this.columnSHIPAGENT.MaxLength = 10;
                this.columnISBIND.DefaultValue = ((string)("N"));
                this.columnISDAMAGE.DefaultValue = ((string)("N"));
                this.columnISOVERTOP.DefaultValue = ((string)("N"));
                this.columnISIMDG.DefaultValue = ((string)("N"));
                this.columnISREEF.DefaultValue = ((string)("N"));
                this.columnISOVERDIS.DefaultValue = ((string)("N"));
                this.columnEMPTYFULL.Caption = "emptyFull";
                this.columnBINDSEQ.DefaultValue = ((decimal)(1m));
                this.columnOVR.DefaultValue = ((decimal)(0m));
                this.columnOVL.DefaultValue = ((decimal)(0m));
                this.columnOVF.DefaultValue = ((decimal)(0m));
                this.columnOVA.DefaultValue = ((decimal)(0m));
                this.columnOVH.DefaultValue = ((decimal)(0m));
                this.columnSHIPOWNER.MaxLength = 18;
                this.columnDOCK_ID2.DefaultValue = ((decimal)(0m));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CNTRow NewT_OCRX_CNTRow() {
                return ((T_OCRX_CNTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_OCRX_CNTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_OCRX_CNTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_OCRX_CNTRowChanged != null)) {
                    this.T_OCRX_CNTRowChanged(this, new T_OCRX_CNTRowChangeEvent(((T_OCRX_CNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_OCRX_CNTRowChanging != null)) {
                    this.T_OCRX_CNTRowChanging(this, new T_OCRX_CNTRowChangeEvent(((T_OCRX_CNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_OCRX_CNTRowDeleted != null)) {
                    this.T_OCRX_CNTRowDeleted(this, new T_OCRX_CNTRowChangeEvent(((T_OCRX_CNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_OCRX_CNTRowDeleting != null)) {
                    this.T_OCRX_CNTRowDeleting(this, new T_OCRX_CNTRowChangeEvent(((T_OCRX_CNTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_OCRX_CNTRow(T_OCRX_CNTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_OCRX_CNTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_OCRX_CORow : global::System.Data.DataRow {
            
            private T_OCRX_CODataTable tableT_OCRX_CO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_CORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_OCRX_CO = ((T_OCRX_CODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tableT_OCRX_CO.COMPANYCODEColumn]));
                }
                set {
                    this[this.tableT_OCRX_CO.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYNAME {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_CO.COMPANYNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CO”中列“COMPANYNAME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CO.COMPANYNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_CO.CREATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CO”中列“CREATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CO.CREATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CO.CREATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CO”中列“CREATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CO.CREATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_CO.UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CO”中列“UPDATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CO.UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CO.UPDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CO”中列“UPDATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CO.UPDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANYNAMENull() {
                return this.IsNull(this.tableT_OCRX_CO.COMPANYNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANYNAMENull() {
                this[this.tableT_OCRX_CO.COMPANYNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_CO.CREATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATEDBYNull() {
                this[this.tableT_OCRX_CO.CREATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATETIMENull() {
                return this.IsNull(this.tableT_OCRX_CO.CREATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATETIMENull() {
                this[this.tableT_OCRX_CO.CREATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_CO.UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEDBYNull() {
                this[this.tableT_OCRX_CO.UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATETIMENull() {
                return this.IsNull(this.tableT_OCRX_CO.UPDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATETIMENull() {
                this[this.tableT_OCRX_CO.UPDATETIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_OCRX_USERSRow : global::System.Data.DataRow {
            
            private T_OCRX_USERSDataTable tableT_OCRX_USERS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_USERSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_OCRX_USERS = ((T_OCRX_USERSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string USERID {
                get {
                    return ((string)(this[this.tableT_OCRX_USERS.USERIDColumn]));
                }
                set {
                    this[this.tableT_OCRX_USERS.USERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_USERS.COMPANYCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_USERS”中列“COMPANYCODE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_USERS.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_USERS.CREATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_USERS”中列“CREATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_USERS.CREATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_USERS.CREATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_USERS”中列“CREATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_USERS.CREATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_USERS.UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_USERS”中列“UPDATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_USERS.UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_USERS.UPDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_USERS”中列“UPDATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_USERS.UPDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANYCODENull() {
                return this.IsNull(this.tableT_OCRX_USERS.COMPANYCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANYCODENull() {
                this[this.tableT_OCRX_USERS.COMPANYCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_USERS.CREATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATEDBYNull() {
                this[this.tableT_OCRX_USERS.CREATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATETIMENull() {
                return this.IsNull(this.tableT_OCRX_USERS.CREATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATETIMENull() {
                this[this.tableT_OCRX_USERS.CREATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_USERS.UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEDBYNull() {
                this[this.tableT_OCRX_USERS.UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATETIMENull() {
                return this.IsNull(this.tableT_OCRX_USERS.UPDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATETIMENull() {
                this[this.tableT_OCRX_USERS.UPDATETIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_OCRX_VESSELRow : global::System.Data.DataRow {
            
            private T_OCRX_VESSELDataTable tableT_OCRX_VESSEL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_VESSELRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_OCRX_VESSEL = ((T_OCRX_VESSELDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tableT_OCRX_VESSEL.COMPANYCODEColumn]));
                }
                set {
                    this[this.tableT_OCRX_VESSEL.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICECODE {
                get {
                    return ((string)(this[this.tableT_OCRX_VESSEL.SERVICECODEColumn]));
                }
                set {
                    this[this.tableT_OCRX_VESSEL.SERVICECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LINECODE {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_VESSEL.LINECODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_VESSEL”中列“LINECODE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_VESSEL.LINECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_VESSEL.CREATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_VESSEL”中列“CREATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_VESSEL.CREATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_VESSEL.CREATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_VESSEL”中列“CREATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_VESSEL.CREATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_VESSEL.UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_VESSEL”中列“UPDATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_VESSEL.UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_VESSEL.UPDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_VESSEL”中列“UPDATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_VESSEL.UPDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLINECODENull() {
                return this.IsNull(this.tableT_OCRX_VESSEL.LINECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLINECODENull() {
                this[this.tableT_OCRX_VESSEL.LINECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_VESSEL.CREATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATEDBYNull() {
                this[this.tableT_OCRX_VESSEL.CREATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATETIMENull() {
                return this.IsNull(this.tableT_OCRX_VESSEL.CREATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATETIMENull() {
                this[this.tableT_OCRX_VESSEL.CREATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_VESSEL.UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEDBYNull() {
                this[this.tableT_OCRX_VESSEL.UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATETIMENull() {
                return this.IsNull(this.tableT_OCRX_VESSEL.UPDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATETIMENull() {
                this[this.tableT_OCRX_VESSEL.UPDATETIMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_OCRX_BARGERow : global::System.Data.DataRow {
            
            private T_OCRX_BARGEDataTable tableT_OCRX_BARGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_BARGERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_OCRX_BARGE = ((T_OCRX_BARGEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    return ((string)(this[this.tableT_OCRX_BARGE.COMPANYCODEColumn]));
                }
                set {
                    this[this.tableT_OCRX_BARGE.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPAGENT {
                get {
                    return ((string)(this[this.tableT_OCRX_BARGE.SHIPAGENTColumn]));
                }
                set {
                    this[this.tableT_OCRX_BARGE.SHIPAGENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPOWNER {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_BARGE.SHIPOWNERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_BARGE”中列“SHIPOWNER”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.SHIPOWNERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CREATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_BARGE.CREATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_BARGE”中列“CREATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.CREATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_BARGE.CREATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_BARGE”中列“CREATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.CREATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPDATEDBY {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_BARGE.UPDATEDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_BARGE”中列“UPDATEDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.UPDATEDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATETIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_BARGE.UPDATETIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_BARGE”中列“UPDATETIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.UPDATETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BERTHPLANNO {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_BARGE.BERTHPLANNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_BARGE”中列“BERTHPLANNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.BERTHPLANNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_CODE {
                get {
                    if (this.IsSHIP_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_BARGE.SHIP_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.SHIP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IN_VOYAGE_CODE {
                get {
                    if (this.IsIN_VOYAGE_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_BARGE.IN_VOYAGE_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.IN_VOYAGE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUT_VOYAGE_CODE {
                get {
                    if (this.IsOUT_VOYAGE_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_BARGE.OUT_VOYAGE_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_BARGE.OUT_VOYAGE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIPOWNERNull() {
                return this.IsNull(this.tableT_OCRX_BARGE.SHIPOWNERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIPOWNERNull() {
                this[this.tableT_OCRX_BARGE.SHIPOWNERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_BARGE.CREATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATEDBYNull() {
                this[this.tableT_OCRX_BARGE.CREATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATETIMENull() {
                return this.IsNull(this.tableT_OCRX_BARGE.CREATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATETIMENull() {
                this[this.tableT_OCRX_BARGE.CREATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATEDBYNull() {
                return this.IsNull(this.tableT_OCRX_BARGE.UPDATEDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATEDBYNull() {
                this[this.tableT_OCRX_BARGE.UPDATEDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATETIMENull() {
                return this.IsNull(this.tableT_OCRX_BARGE.UPDATETIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATETIMENull() {
                this[this.tableT_OCRX_BARGE.UPDATETIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBERTHPLANNONull() {
                return this.IsNull(this.tableT_OCRX_BARGE.BERTHPLANNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBERTHPLANNONull() {
                this[this.tableT_OCRX_BARGE.BERTHPLANNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIP_CODENull() {
                return this.IsNull(this.tableT_OCRX_BARGE.SHIP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIP_CODENull() {
                this[this.tableT_OCRX_BARGE.SHIP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIN_VOYAGE_CODENull() {
                return this.IsNull(this.tableT_OCRX_BARGE.IN_VOYAGE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIN_VOYAGE_CODENull() {
                this[this.tableT_OCRX_BARGE.IN_VOYAGE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUT_VOYAGE_CODENull() {
                return this.IsNull(this.tableT_OCRX_BARGE.OUT_VOYAGE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUT_VOYAGE_CODENull() {
                this[this.tableT_OCRX_BARGE.OUT_VOYAGE_CODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_OCRX_CNTRow : global::System.Data.DataRow {
            
            private T_OCRX_CNTDataTable tableT_OCRX_CNT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCRX_CNTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_OCRX_CNT = ((T_OCRX_CNTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DOCK_ID {
                get {
                    return ((decimal)(this[this.tableT_OCRX_CNT.DOCK_IDColumn]));
                }
                set {
                    this[this.tableT_OCRX_CNT.DOCK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISARCHIVED {
                get {
                    return ((string)(this[this.tableT_OCRX_CNT.ISARCHIVEDColumn]));
                }
                set {
                    this[this.tableT_OCRX_CNT.ISARCHIVEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTAINER_NO {
                get {
                    if (this.IsCONTAINER_NONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.CONTAINER_NOColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CONTAINER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCONTAINER_NO {
                get {
                    if (this.IsRCONTAINER_NONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.RCONTAINER_NOColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.RCONTAINER_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTAINER_SHAPE {
                get {
                    if (this.IsCONTAINER_SHAPENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.CONTAINER_SHAPEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CONTAINER_SHAPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RCONTAINER_SHAPE {
                get {
                    if (this.IsRCONTAINER_SHAPENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.RCONTAINER_SHAPEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.RCONTAINER_SHAPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONTAINER_SIZE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.CONTAINER_SIZEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“CONTAINER_SIZE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CONTAINER_SIZEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CTYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.CTYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“CTYPE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DOCK_STATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.DOCK_STATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“DOCK_STATUS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.DOCK_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CSTATUS {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.CSTATUSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“CSTATUS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CSTATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRVALCRANE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.TRVALCRANE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“TRVALCRANE_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.TRVALCRANE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRVAL_NO {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_CNT.TRVAL_NOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“TRVAL_NO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.TRVAL_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CNAM {
                get {
                    if (this.IsCNAMNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.CNAMColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CNAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ENAM {
                get {
                    if (this.IsENAMNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ENAMColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ENAMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_CODE {
                get {
                    if (this.IsSHIP_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.SHIP_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.SHIP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C_VOYAGE {
                get {
                    if (this.IsC_VOYAGENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.C_VOYAGEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.C_VOYAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PIC_NUM {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.PIC_NUMColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“PIC_NUM”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.PIC_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MSG_INDEX {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.MSG_INDEXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“MSG_INDEX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.MSG_INDEXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CNT.CTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“CTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PMS_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.PMS_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“PMS_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.PMS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime COPYTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CNT.COPYTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“COPYTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.COPYTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime STARTTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CNT.STARTTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“STARTTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.STARTTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FINISHTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CNT.FINISHTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“FINISHTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.FINISHTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPERATORNAME {
                get {
                    if (this.IsOPERATORNAMENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.OPERATORNAMEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.OPERATORNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BERTH_NUM {
                get {
                    if (this.IsBERTH_NUMNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.BERTH_NUMColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.BERTH_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONTAINERID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.CONTAINERIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“CONTAINERID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CONTAINERIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTOSERRORMSG {
                get {
                    if (this.IsCTOSERRORMSGNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.CTOSERRORMSGColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CTOSERRORMSGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTOSERRORCODE {
                get {
                    if (this.IsCTOSERRORCODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.CTOSERRORCODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CTOSERRORCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EXCEPSTARTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CNT.EXCEPSTARTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“EXCEPSTARTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.EXCEPSTARTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EXCEPFINISHTIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCRX_CNT.EXCEPFINISHTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“EXCEPFINISHTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.EXCEPFINISHTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EXCEPUSER {
                get {
                    if (this.IsEXCEPUSERNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.EXCEPUSERColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.EXCEPUSERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LINECODE {
                get {
                    if (this.IsLINECODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.LINECODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.LINECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPANYCODE {
                get {
                    if (this.IsCOMPANYCODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.COMPANYCODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.COMPANYCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SERVICECODE {
                get {
                    if (this.IsSERVICECODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.SERVICECODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.SERVICECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPAGENT {
                get {
                    if (this.IsSHIPAGENTNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.SHIPAGENTColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.SHIPAGENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INAIM {
                get {
                    if (this.IsINAIMNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.INAIMColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.INAIMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOCTYPE {
                get {
                    if (this.IsLOCTYPENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.LOCTYPEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.LOCTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERMINALLOCK {
                get {
                    if (this.IsTERMINALLOCKNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.TERMINALLOCKColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.TERMINALLOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FORMLOCK {
                get {
                    if (this.IsFORMLOCKNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.FORMLOCKColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.FORMLOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISBIND {
                get {
                    if (this.IsISBINDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ISBINDColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ISBINDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISDAMAGE {
                get {
                    if (this.IsISDAMAGENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ISDAMAGEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ISDAMAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISOVERTOP {
                get {
                    if (this.IsISOVERTOPNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ISOVERTOPColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ISOVERTOPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISIMDG {
                get {
                    if (this.IsISIMDGNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ISIMDGColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ISIMDGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISREEF {
                get {
                    if (this.IsISREEFNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ISREEFColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ISREEFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MAINCONTAINERNO {
                get {
                    if (this.IsMAINCONTAINERNONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.MAINCONTAINERNOColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.MAINCONTAINERNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISOVERDIS {
                get {
                    if (this.IsISOVERDISNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ISOVERDISColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ISOVERDISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SETUPTEMP {
                get {
                    if (this.IsSETUPTEMPNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.SETUPTEMPColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.SETUPTEMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string EMPTYFULL {
                get {
                    if (this.IsEMPTYFULLNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.EMPTYFULLColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.EMPTYFULLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CONTAINER_HEIGHT {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.CONTAINER_HEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“CONTAINER_HEIGHT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CONTAINER_HEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTAINERTYPE {
                get {
                    if (this.IsCONTAINERTYPENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.CONTAINERTYPEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.CONTAINERTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BINDSEQ {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.BINDSEQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“BINDSEQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.BINDSEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Dmg {
                get {
                    if (this.IsDmgNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.DmgColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.DmgColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVR {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.OVRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“OVR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.OVRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVL {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.OVLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“OVL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.OVLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVF {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.OVFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“OVF”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.OVFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVA {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.OVAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“OVA”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.OVAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OVH {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.OVHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“OVH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.OVHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImdgNum3 {
                get {
                    if (this.IsImdgNum3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ImdgNum3Column]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ImdgNum3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Imdg3 {
                get {
                    if (this.IsImdg3Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.Imdg3Column]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.Imdg3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImdgNum2 {
                get {
                    if (this.IsImdgNum2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ImdgNum2Column]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ImdgNum2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Imdg2 {
                get {
                    if (this.IsImdg2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.Imdg2Column]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.Imdg2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ImdgNum1 {
                get {
                    if (this.IsImdgNum1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.ImdgNum1Column]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.ImdgNum1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Imdg1 {
                get {
                    if (this.IsImdg1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.Imdg1Column]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.Imdg1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPOWNER {
                get {
                    if (this.IsSHIPOWNERNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCRX_CNT.SHIPOWNERColumn]));
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.SHIPOWNERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DOCK_ID2 {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCRX_CNT.DOCK_ID2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“DOCK_ID2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.DOCK_ID2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOADDIS {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_CNT.LOADDISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“LOADDIS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.LOADDISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWOCNTS {
                get {
                    try {
                        return ((string)(this[this.tableT_OCRX_CNT.TWOCNTSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCRX_CNT”中列“TWOCNTS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCRX_CNT.TWOCNTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTAINER_NONull() {
                return this.IsNull(this.tableT_OCRX_CNT.CONTAINER_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTAINER_NONull() {
                this[this.tableT_OCRX_CNT.CONTAINER_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRCONTAINER_NONull() {
                return this.IsNull(this.tableT_OCRX_CNT.RCONTAINER_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRCONTAINER_NONull() {
                this[this.tableT_OCRX_CNT.RCONTAINER_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTAINER_SHAPENull() {
                return this.IsNull(this.tableT_OCRX_CNT.CONTAINER_SHAPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTAINER_SHAPENull() {
                this[this.tableT_OCRX_CNT.CONTAINER_SHAPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRCONTAINER_SHAPENull() {
                return this.IsNull(this.tableT_OCRX_CNT.RCONTAINER_SHAPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRCONTAINER_SHAPENull() {
                this[this.tableT_OCRX_CNT.RCONTAINER_SHAPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTAINER_SIZENull() {
                return this.IsNull(this.tableT_OCRX_CNT.CONTAINER_SIZEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTAINER_SIZENull() {
                this[this.tableT_OCRX_CNT.CONTAINER_SIZEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTYPENull() {
                return this.IsNull(this.tableT_OCRX_CNT.CTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTYPENull() {
                this[this.tableT_OCRX_CNT.CTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCK_STATUSNull() {
                return this.IsNull(this.tableT_OCRX_CNT.DOCK_STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCK_STATUSNull() {
                this[this.tableT_OCRX_CNT.DOCK_STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCSTATUSNull() {
                return this.IsNull(this.tableT_OCRX_CNT.CSTATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCSTATUSNull() {
                this[this.tableT_OCRX_CNT.CSTATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRVALCRANE_IDNull() {
                return this.IsNull(this.tableT_OCRX_CNT.TRVALCRANE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRVALCRANE_IDNull() {
                this[this.tableT_OCRX_CNT.TRVALCRANE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRVAL_NONull() {
                return this.IsNull(this.tableT_OCRX_CNT.TRVAL_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRVAL_NONull() {
                this[this.tableT_OCRX_CNT.TRVAL_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNAMNull() {
                return this.IsNull(this.tableT_OCRX_CNT.CNAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNAMNull() {
                this[this.tableT_OCRX_CNT.CNAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsENAMNull() {
                return this.IsNull(this.tableT_OCRX_CNT.ENAMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetENAMNull() {
                this[this.tableT_OCRX_CNT.ENAMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIP_CODENull() {
                return this.IsNull(this.tableT_OCRX_CNT.SHIP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIP_CODENull() {
                this[this.tableT_OCRX_CNT.SHIP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsC_VOYAGENull() {
                return this.IsNull(this.tableT_OCRX_CNT.C_VOYAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetC_VOYAGENull() {
                this[this.tableT_OCRX_CNT.C_VOYAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPIC_NUMNull() {
                return this.IsNull(this.tableT_OCRX_CNT.PIC_NUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPIC_NUMNull() {
                this[this.tableT_OCRX_CNT.PIC_NUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMSG_INDEXNull() {
                return this.IsNull(this.tableT_OCRX_CNT.MSG_INDEXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMSG_INDEXNull() {
                this[this.tableT_OCRX_CNT.MSG_INDEXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTIMENull() {
                return this.IsNull(this.tableT_OCRX_CNT.CTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTIMENull() {
                this[this.tableT_OCRX_CNT.CTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMS_IDNull() {
                return this.IsNull(this.tableT_OCRX_CNT.PMS_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMS_IDNull() {
                this[this.tableT_OCRX_CNT.PMS_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOPYTIMENull() {
                return this.IsNull(this.tableT_OCRX_CNT.COPYTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOPYTIMENull() {
                this[this.tableT_OCRX_CNT.COPYTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTARTTIMENull() {
                return this.IsNull(this.tableT_OCRX_CNT.STARTTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTARTTIMENull() {
                this[this.tableT_OCRX_CNT.STARTTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFINISHTIMENull() {
                return this.IsNull(this.tableT_OCRX_CNT.FINISHTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFINISHTIMENull() {
                this[this.tableT_OCRX_CNT.FINISHTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPERATORNAMENull() {
                return this.IsNull(this.tableT_OCRX_CNT.OPERATORNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPERATORNAMENull() {
                this[this.tableT_OCRX_CNT.OPERATORNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBERTH_NUMNull() {
                return this.IsNull(this.tableT_OCRX_CNT.BERTH_NUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBERTH_NUMNull() {
                this[this.tableT_OCRX_CNT.BERTH_NUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTAINERIDNull() {
                return this.IsNull(this.tableT_OCRX_CNT.CONTAINERIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTAINERIDNull() {
                this[this.tableT_OCRX_CNT.CONTAINERIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTOSERRORMSGNull() {
                return this.IsNull(this.tableT_OCRX_CNT.CTOSERRORMSGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTOSERRORMSGNull() {
                this[this.tableT_OCRX_CNT.CTOSERRORMSGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTOSERRORCODENull() {
                return this.IsNull(this.tableT_OCRX_CNT.CTOSERRORCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTOSERRORCODENull() {
                this[this.tableT_OCRX_CNT.CTOSERRORCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPSTARTIMENull() {
                return this.IsNull(this.tableT_OCRX_CNT.EXCEPSTARTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPSTARTIMENull() {
                this[this.tableT_OCRX_CNT.EXCEPSTARTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPFINISHTIMENull() {
                return this.IsNull(this.tableT_OCRX_CNT.EXCEPFINISHTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPFINISHTIMENull() {
                this[this.tableT_OCRX_CNT.EXCEPFINISHTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEXCEPUSERNull() {
                return this.IsNull(this.tableT_OCRX_CNT.EXCEPUSERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEXCEPUSERNull() {
                this[this.tableT_OCRX_CNT.EXCEPUSERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLINECODENull() {
                return this.IsNull(this.tableT_OCRX_CNT.LINECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLINECODENull() {
                this[this.tableT_OCRX_CNT.LINECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPANYCODENull() {
                return this.IsNull(this.tableT_OCRX_CNT.COMPANYCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPANYCODENull() {
                this[this.tableT_OCRX_CNT.COMPANYCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSERVICECODENull() {
                return this.IsNull(this.tableT_OCRX_CNT.SERVICECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSERVICECODENull() {
                this[this.tableT_OCRX_CNT.SERVICECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIPAGENTNull() {
                return this.IsNull(this.tableT_OCRX_CNT.SHIPAGENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIPAGENTNull() {
                this[this.tableT_OCRX_CNT.SHIPAGENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINAIMNull() {
                return this.IsNull(this.tableT_OCRX_CNT.INAIMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINAIMNull() {
                this[this.tableT_OCRX_CNT.INAIMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOCTYPENull() {
                return this.IsNull(this.tableT_OCRX_CNT.LOCTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOCTYPENull() {
                this[this.tableT_OCRX_CNT.LOCTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMINALLOCKNull() {
                return this.IsNull(this.tableT_OCRX_CNT.TERMINALLOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMINALLOCKNull() {
                this[this.tableT_OCRX_CNT.TERMINALLOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFORMLOCKNull() {
                return this.IsNull(this.tableT_OCRX_CNT.FORMLOCKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFORMLOCKNull() {
                this[this.tableT_OCRX_CNT.FORMLOCKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISBINDNull() {
                return this.IsNull(this.tableT_OCRX_CNT.ISBINDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISBINDNull() {
                this[this.tableT_OCRX_CNT.ISBINDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISDAMAGENull() {
                return this.IsNull(this.tableT_OCRX_CNT.ISDAMAGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISDAMAGENull() {
                this[this.tableT_OCRX_CNT.ISDAMAGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISOVERTOPNull() {
                return this.IsNull(this.tableT_OCRX_CNT.ISOVERTOPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISOVERTOPNull() {
                this[this.tableT_OCRX_CNT.ISOVERTOPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISIMDGNull() {
                return this.IsNull(this.tableT_OCRX_CNT.ISIMDGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISIMDGNull() {
                this[this.tableT_OCRX_CNT.ISIMDGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISREEFNull() {
                return this.IsNull(this.tableT_OCRX_CNT.ISREEFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISREEFNull() {
                this[this.tableT_OCRX_CNT.ISREEFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMAINCONTAINERNONull() {
                return this.IsNull(this.tableT_OCRX_CNT.MAINCONTAINERNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMAINCONTAINERNONull() {
                this[this.tableT_OCRX_CNT.MAINCONTAINERNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISOVERDISNull() {
                return this.IsNull(this.tableT_OCRX_CNT.ISOVERDISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISOVERDISNull() {
                this[this.tableT_OCRX_CNT.ISOVERDISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSETUPTEMPNull() {
                return this.IsNull(this.tableT_OCRX_CNT.SETUPTEMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSETUPTEMPNull() {
                this[this.tableT_OCRX_CNT.SETUPTEMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEMPTYFULLNull() {
                return this.IsNull(this.tableT_OCRX_CNT.EMPTYFULLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEMPTYFULLNull() {
                this[this.tableT_OCRX_CNT.EMPTYFULLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTAINER_HEIGHTNull() {
                return this.IsNull(this.tableT_OCRX_CNT.CONTAINER_HEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTAINER_HEIGHTNull() {
                this[this.tableT_OCRX_CNT.CONTAINER_HEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTAINERTYPENull() {
                return this.IsNull(this.tableT_OCRX_CNT.CONTAINERTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTAINERTYPENull() {
                this[this.tableT_OCRX_CNT.CONTAINERTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBINDSEQNull() {
                return this.IsNull(this.tableT_OCRX_CNT.BINDSEQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBINDSEQNull() {
                this[this.tableT_OCRX_CNT.BINDSEQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDmgNull() {
                return this.IsNull(this.tableT_OCRX_CNT.DmgColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDmgNull() {
                this[this.tableT_OCRX_CNT.DmgColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVRNull() {
                return this.IsNull(this.tableT_OCRX_CNT.OVRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVRNull() {
                this[this.tableT_OCRX_CNT.OVRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVLNull() {
                return this.IsNull(this.tableT_OCRX_CNT.OVLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVLNull() {
                this[this.tableT_OCRX_CNT.OVLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVFNull() {
                return this.IsNull(this.tableT_OCRX_CNT.OVFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVFNull() {
                this[this.tableT_OCRX_CNT.OVFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVANull() {
                return this.IsNull(this.tableT_OCRX_CNT.OVAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVANull() {
                this[this.tableT_OCRX_CNT.OVAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOVHNull() {
                return this.IsNull(this.tableT_OCRX_CNT.OVHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOVHNull() {
                this[this.tableT_OCRX_CNT.OVHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImdgNum3Null() {
                return this.IsNull(this.tableT_OCRX_CNT.ImdgNum3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImdgNum3Null() {
                this[this.tableT_OCRX_CNT.ImdgNum3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImdg3Null() {
                return this.IsNull(this.tableT_OCRX_CNT.Imdg3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImdg3Null() {
                this[this.tableT_OCRX_CNT.Imdg3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImdgNum2Null() {
                return this.IsNull(this.tableT_OCRX_CNT.ImdgNum2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImdgNum2Null() {
                this[this.tableT_OCRX_CNT.ImdgNum2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImdg2Null() {
                return this.IsNull(this.tableT_OCRX_CNT.Imdg2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImdg2Null() {
                this[this.tableT_OCRX_CNT.Imdg2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImdgNum1Null() {
                return this.IsNull(this.tableT_OCRX_CNT.ImdgNum1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImdgNum1Null() {
                this[this.tableT_OCRX_CNT.ImdgNum1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsImdg1Null() {
                return this.IsNull(this.tableT_OCRX_CNT.Imdg1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetImdg1Null() {
                this[this.tableT_OCRX_CNT.Imdg1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIPOWNERNull() {
                return this.IsNull(this.tableT_OCRX_CNT.SHIPOWNERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIPOWNERNull() {
                this[this.tableT_OCRX_CNT.SHIPOWNERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDOCK_ID2Null() {
                return this.IsNull(this.tableT_OCRX_CNT.DOCK_ID2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDOCK_ID2Null() {
                this[this.tableT_OCRX_CNT.DOCK_ID2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOADDISNull() {
                return this.IsNull(this.tableT_OCRX_CNT.LOADDISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOADDISNull() {
                this[this.tableT_OCRX_CNT.LOADDISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWOCNTSNull() {
                return this.IsNull(this.tableT_OCRX_CNT.TWOCNTSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWOCNTSNull() {
                this[this.tableT_OCRX_CNT.TWOCNTSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_OCRX_CORowChangeEvent : global::System.EventArgs {
            
            private T_OCRX_CORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CORowChangeEvent(T_OCRX_CORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_OCRX_USERSRowChangeEvent : global::System.EventArgs {
            
            private T_OCRX_USERSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_USERSRowChangeEvent(T_OCRX_USERSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_USERSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_OCRX_VESSELRowChangeEvent : global::System.EventArgs {
            
            private T_OCRX_VESSELRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_VESSELRowChangeEvent(T_OCRX_VESSELRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_VESSELRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_OCRX_BARGERowChangeEvent : global::System.EventArgs {
            
            private T_OCRX_BARGERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_BARGERowChangeEvent(T_OCRX_BARGERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_BARGERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_OCRX_CNTRowChangeEvent : global::System.EventArgs {
            
            private T_OCRX_CNTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CNTRowChangeEvent(T_OCRX_CNTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCRX_CNTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591