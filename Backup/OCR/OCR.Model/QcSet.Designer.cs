//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace OCR.Model {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("QcSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class QcSet : global::System.Data.DataSet {
        
        private T_OCR_QCSETDataTable tableT_OCR_QCSET;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public QcSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected QcSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["T_OCR_QCSET"] != null)) {
                    base.Tables.Add(new T_OCR_QCSETDataTable(ds.Tables["T_OCR_QCSET"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public T_OCR_QCSETDataTable T_OCR_QCSET {
            get {
                return this.tableT_OCR_QCSET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            QcSet cln = ((QcSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["T_OCR_QCSET"] != null)) {
                    base.Tables.Add(new T_OCR_QCSETDataTable(ds.Tables["T_OCR_QCSET"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableT_OCR_QCSET = ((T_OCR_QCSETDataTable)(base.Tables["T_OCR_QCSET"]));
            if ((initTable == true)) {
                if ((this.tableT_OCR_QCSET != null)) {
                    this.tableT_OCR_QCSET.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "QcSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/QcSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableT_OCR_QCSET = new T_OCR_QCSETDataTable();
            base.Tables.Add(this.tableT_OCR_QCSET);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeT_OCR_QCSET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            QcSet ds = new QcSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void T_OCR_QCSETRowChangeEventHandler(object sender, T_OCR_QCSETRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class T_OCR_QCSETDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWORKSET_ID;
            
            private global::System.Data.DataColumn columnTRVALCRANE_ID;
            
            private global::System.Data.DataColumn columnTRVALCRANE_NO;
            
            private global::System.Data.DataColumn columnCONTRACTOR_CODE;
            
            private global::System.Data.DataColumn columnCOMMEND_ID;
            
            private global::System.Data.DataColumn columnDRIVER_ID;
            
            private global::System.Data.DataColumn columnSHIP_CODE;
            
            private global::System.Data.DataColumn columnIN_VOYAGE_CODE;
            
            private global::System.Data.DataColumn columnOUT_VOYAGE_CODE;
            
            private global::System.Data.DataColumn columnBERTH_NUM;
            
            private global::System.Data.DataColumn columnVOYAGE_TYPE;
            
            private global::System.Data.DataColumn columnSHIPMENT_DEAL;
            
            private global::System.Data.DataColumn columnOPERATOR_UID;
            
            private global::System.Data.DataColumn columnCOMMEND_PAW;
            
            private global::System.Data.DataColumn columnTERMINAL_NO;
            
            private global::System.Data.DataColumn columnTICKET_ID;
            
            private global::System.Data.DataColumn columnDEVICE_NO;
            
            private global::System.Data.DataColumn columnDEVICE_TYPE;
            
            private global::System.Data.DataColumn columnIS_CHANGE;
            
            private global::System.Data.DataColumn columnSTATUS;
            
            private global::System.Data.DataColumn columnERROR_MESS;
            
            private global::System.Data.DataColumn columnCREATE_TIME;
            
            private global::System.Data.DataColumn columnUPDATE_TIME;
            
            private global::System.Data.DataColumn columnBERTH_WAY;
            
            private global::System.Data.DataColumn columnVESSELALIASE;
            
            private global::System.Data.DataColumn columnBERTHPLANNO;
            
            private global::System.Data.DataColumn columnAVESSELNAME;
            
            private global::System.Data.DataColumn columnINAGENT;
            
            private global::System.Data.DataColumn columnOUTAGENT;
            
            private global::System.Data.DataColumn columnOWNER;
            
            private global::System.Data.DataColumn columnINVESSELLINECODE;
            
            private global::System.Data.DataColumn columnOUTVESSELLINECODE;
            
            private global::System.Data.DataColumn columnWORKTYPE;
            
            private global::System.Data.DataColumn columnCAMERACODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCR_QCSETDataTable() {
                this.TableName = "T_OCR_QCSET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCR_QCSETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected T_OCR_QCSETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WORKSET_IDColumn {
                get {
                    return this.columnWORKSET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRVALCRANE_IDColumn {
                get {
                    return this.columnTRVALCRANE_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRVALCRANE_NOColumn {
                get {
                    return this.columnTRVALCRANE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CONTRACTOR_CODEColumn {
                get {
                    return this.columnCONTRACTOR_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMEND_IDColumn {
                get {
                    return this.columnCOMMEND_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DRIVER_IDColumn {
                get {
                    return this.columnDRIVER_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIP_CODEColumn {
                get {
                    return this.columnSHIP_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IN_VOYAGE_CODEColumn {
                get {
                    return this.columnIN_VOYAGE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OUT_VOYAGE_CODEColumn {
                get {
                    return this.columnOUT_VOYAGE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BERTH_NUMColumn {
                get {
                    return this.columnBERTH_NUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VOYAGE_TYPEColumn {
                get {
                    return this.columnVOYAGE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHIPMENT_DEALColumn {
                get {
                    return this.columnSHIPMENT_DEAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPERATOR_UIDColumn {
                get {
                    return this.columnOPERATOR_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn COMMEND_PAWColumn {
                get {
                    return this.columnCOMMEND_PAW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TERMINAL_NOColumn {
                get {
                    return this.columnTERMINAL_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TICKET_IDColumn {
                get {
                    return this.columnTICKET_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEVICE_NOColumn {
                get {
                    return this.columnDEVICE_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DEVICE_TYPEColumn {
                get {
                    return this.columnDEVICE_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IS_CHANGEColumn {
                get {
                    return this.columnIS_CHANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ERROR_MESSColumn {
                get {
                    return this.columnERROR_MESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CREATE_TIMEColumn {
                get {
                    return this.columnCREATE_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPDATE_TIMEColumn {
                get {
                    return this.columnUPDATE_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BERTH_WAYColumn {
                get {
                    return this.columnBERTH_WAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VESSELALIASEColumn {
                get {
                    return this.columnVESSELALIASE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BERTHPLANNOColumn {
                get {
                    return this.columnBERTHPLANNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AVESSELNAMEColumn {
                get {
                    return this.columnAVESSELNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INAGENTColumn {
                get {
                    return this.columnINAGENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OUTAGENTColumn {
                get {
                    return this.columnOUTAGENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OWNERColumn {
                get {
                    return this.columnOWNER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn INVESSELLINECODEColumn {
                get {
                    return this.columnINVESSELLINECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OUTVESSELLINECODEColumn {
                get {
                    return this.columnOUTVESSELLINECODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WORKTYPEColumn {
                get {
                    return this.columnWORKTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAMERACODEColumn {
                get {
                    return this.columnCAMERACODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCR_QCSETRow this[int index] {
                get {
                    return ((T_OCR_QCSETRow)(this.Rows[index]));
                }
            }
            
            public event T_OCR_QCSETRowChangeEventHandler T_OCR_QCSETRowChanging;
            
            public event T_OCR_QCSETRowChangeEventHandler T_OCR_QCSETRowChanged;
            
            public event T_OCR_QCSETRowChangeEventHandler T_OCR_QCSETRowDeleting;
            
            public event T_OCR_QCSETRowChangeEventHandler T_OCR_QCSETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddT_OCR_QCSETRow(T_OCR_QCSETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCR_QCSETRow AddT_OCR_QCSETRow(
                        decimal WORKSET_ID, 
                        decimal TRVALCRANE_ID, 
                        string TRVALCRANE_NO, 
                        string CONTRACTOR_CODE, 
                        string COMMEND_ID, 
                        string DRIVER_ID, 
                        string SHIP_CODE, 
                        string IN_VOYAGE_CODE, 
                        string OUT_VOYAGE_CODE, 
                        string BERTH_NUM, 
                        string VOYAGE_TYPE, 
                        string SHIPMENT_DEAL, 
                        string OPERATOR_UID, 
                        string COMMEND_PAW, 
                        string TERMINAL_NO, 
                        string TICKET_ID, 
                        string DEVICE_NO, 
                        decimal DEVICE_TYPE, 
                        decimal IS_CHANGE, 
                        string STATUS, 
                        string ERROR_MESS, 
                        System.DateTime CREATE_TIME, 
                        System.DateTime UPDATE_TIME, 
                        string BERTH_WAY, 
                        string VESSELALIASE, 
                        decimal BERTHPLANNO, 
                        string AVESSELNAME, 
                        string INAGENT, 
                        string OUTAGENT, 
                        string OWNER, 
                        string INVESSELLINECODE, 
                        string OUTVESSELLINECODE, 
                        string WORKTYPE, 
                        string CAMERACODE) {
                T_OCR_QCSETRow rowT_OCR_QCSETRow = ((T_OCR_QCSETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WORKSET_ID,
                        TRVALCRANE_ID,
                        TRVALCRANE_NO,
                        CONTRACTOR_CODE,
                        COMMEND_ID,
                        DRIVER_ID,
                        SHIP_CODE,
                        IN_VOYAGE_CODE,
                        OUT_VOYAGE_CODE,
                        BERTH_NUM,
                        VOYAGE_TYPE,
                        SHIPMENT_DEAL,
                        OPERATOR_UID,
                        COMMEND_PAW,
                        TERMINAL_NO,
                        TICKET_ID,
                        DEVICE_NO,
                        DEVICE_TYPE,
                        IS_CHANGE,
                        STATUS,
                        ERROR_MESS,
                        CREATE_TIME,
                        UPDATE_TIME,
                        BERTH_WAY,
                        VESSELALIASE,
                        BERTHPLANNO,
                        AVESSELNAME,
                        INAGENT,
                        OUTAGENT,
                        OWNER,
                        INVESSELLINECODE,
                        OUTVESSELLINECODE,
                        WORKTYPE,
                        CAMERACODE};
                rowT_OCR_QCSETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowT_OCR_QCSETRow);
                return rowT_OCR_QCSETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                T_OCR_QCSETDataTable cln = ((T_OCR_QCSETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new T_OCR_QCSETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnWORKSET_ID = base.Columns["WORKSET_ID"];
                this.columnTRVALCRANE_ID = base.Columns["TRVALCRANE_ID"];
                this.columnTRVALCRANE_NO = base.Columns["TRVALCRANE_NO"];
                this.columnCONTRACTOR_CODE = base.Columns["CONTRACTOR_CODE"];
                this.columnCOMMEND_ID = base.Columns["COMMEND_ID"];
                this.columnDRIVER_ID = base.Columns["DRIVER_ID"];
                this.columnSHIP_CODE = base.Columns["SHIP_CODE"];
                this.columnIN_VOYAGE_CODE = base.Columns["IN_VOYAGE_CODE"];
                this.columnOUT_VOYAGE_CODE = base.Columns["OUT_VOYAGE_CODE"];
                this.columnBERTH_NUM = base.Columns["BERTH_NUM"];
                this.columnVOYAGE_TYPE = base.Columns["VOYAGE_TYPE"];
                this.columnSHIPMENT_DEAL = base.Columns["SHIPMENT_DEAL"];
                this.columnOPERATOR_UID = base.Columns["OPERATOR_UID"];
                this.columnCOMMEND_PAW = base.Columns["COMMEND_PAW"];
                this.columnTERMINAL_NO = base.Columns["TERMINAL_NO"];
                this.columnTICKET_ID = base.Columns["TICKET_ID"];
                this.columnDEVICE_NO = base.Columns["DEVICE_NO"];
                this.columnDEVICE_TYPE = base.Columns["DEVICE_TYPE"];
                this.columnIS_CHANGE = base.Columns["IS_CHANGE"];
                this.columnSTATUS = base.Columns["STATUS"];
                this.columnERROR_MESS = base.Columns["ERROR_MESS"];
                this.columnCREATE_TIME = base.Columns["CREATE_TIME"];
                this.columnUPDATE_TIME = base.Columns["UPDATE_TIME"];
                this.columnBERTH_WAY = base.Columns["BERTH_WAY"];
                this.columnVESSELALIASE = base.Columns["VESSELALIASE"];
                this.columnBERTHPLANNO = base.Columns["BERTHPLANNO"];
                this.columnAVESSELNAME = base.Columns["AVESSELNAME"];
                this.columnINAGENT = base.Columns["INAGENT"];
                this.columnOUTAGENT = base.Columns["OUTAGENT"];
                this.columnOWNER = base.Columns["OWNER"];
                this.columnINVESSELLINECODE = base.Columns["INVESSELLINECODE"];
                this.columnOUTVESSELLINECODE = base.Columns["OUTVESSELLINECODE"];
                this.columnWORKTYPE = base.Columns["WORKTYPE"];
                this.columnCAMERACODE = base.Columns["CAMERACODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnWORKSET_ID = new global::System.Data.DataColumn("WORKSET_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKSET_ID);
                this.columnTRVALCRANE_ID = new global::System.Data.DataColumn("TRVALCRANE_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRVALCRANE_ID);
                this.columnTRVALCRANE_NO = new global::System.Data.DataColumn("TRVALCRANE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRVALCRANE_NO);
                this.columnCONTRACTOR_CODE = new global::System.Data.DataColumn("CONTRACTOR_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCONTRACTOR_CODE);
                this.columnCOMMEND_ID = new global::System.Data.DataColumn("COMMEND_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMEND_ID);
                this.columnDRIVER_ID = new global::System.Data.DataColumn("DRIVER_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRIVER_ID);
                this.columnSHIP_CODE = new global::System.Data.DataColumn("SHIP_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIP_CODE);
                this.columnIN_VOYAGE_CODE = new global::System.Data.DataColumn("IN_VOYAGE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_VOYAGE_CODE);
                this.columnOUT_VOYAGE_CODE = new global::System.Data.DataColumn("OUT_VOYAGE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_VOYAGE_CODE);
                this.columnBERTH_NUM = new global::System.Data.DataColumn("BERTH_NUM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBERTH_NUM);
                this.columnVOYAGE_TYPE = new global::System.Data.DataColumn("VOYAGE_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVOYAGE_TYPE);
                this.columnSHIPMENT_DEAL = new global::System.Data.DataColumn("SHIPMENT_DEAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHIPMENT_DEAL);
                this.columnOPERATOR_UID = new global::System.Data.DataColumn("OPERATOR_UID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPERATOR_UID);
                this.columnCOMMEND_PAW = new global::System.Data.DataColumn("COMMEND_PAW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMEND_PAW);
                this.columnTERMINAL_NO = new global::System.Data.DataColumn("TERMINAL_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTERMINAL_NO);
                this.columnTICKET_ID = new global::System.Data.DataColumn("TICKET_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTICKET_ID);
                this.columnDEVICE_NO = new global::System.Data.DataColumn("DEVICE_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEVICE_NO);
                this.columnDEVICE_TYPE = new global::System.Data.DataColumn("DEVICE_TYPE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEVICE_TYPE);
                this.columnIS_CHANGE = new global::System.Data.DataColumn("IS_CHANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_CHANGE);
                this.columnSTATUS = new global::System.Data.DataColumn("STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATUS);
                this.columnERROR_MESS = new global::System.Data.DataColumn("ERROR_MESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnERROR_MESS);
                this.columnCREATE_TIME = new global::System.Data.DataColumn("CREATE_TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCREATE_TIME);
                this.columnUPDATE_TIME = new global::System.Data.DataColumn("UPDATE_TIME", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPDATE_TIME);
                this.columnBERTH_WAY = new global::System.Data.DataColumn("BERTH_WAY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBERTH_WAY);
                this.columnVESSELALIASE = new global::System.Data.DataColumn("VESSELALIASE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVESSELALIASE);
                this.columnBERTHPLANNO = new global::System.Data.DataColumn("BERTHPLANNO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBERTHPLANNO);
                this.columnAVESSELNAME = new global::System.Data.DataColumn("AVESSELNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAVESSELNAME);
                this.columnINAGENT = new global::System.Data.DataColumn("INAGENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINAGENT);
                this.columnOUTAGENT = new global::System.Data.DataColumn("OUTAGENT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTAGENT);
                this.columnOWNER = new global::System.Data.DataColumn("OWNER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOWNER);
                this.columnINVESSELLINECODE = new global::System.Data.DataColumn("INVESSELLINECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINVESSELLINECODE);
                this.columnOUTVESSELLINECODE = new global::System.Data.DataColumn("OUTVESSELLINECODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTVESSELLINECODE);
                this.columnWORKTYPE = new global::System.Data.DataColumn("WORKTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKTYPE);
                this.columnCAMERACODE = new global::System.Data.DataColumn("CAMERACODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAMERACODE);
                this.columnTRVALCRANE_NO.MaxLength = 64;
                this.columnCONTRACTOR_CODE.MaxLength = 64;
                this.columnCOMMEND_ID.MaxLength = 64;
                this.columnDRIVER_ID.MaxLength = 64;
                this.columnSHIP_CODE.MaxLength = 64;
                this.columnIN_VOYAGE_CODE.MaxLength = 64;
                this.columnOUT_VOYAGE_CODE.MaxLength = 64;
                this.columnCOMMEND_PAW.MaxLength = 64;
                this.columnTERMINAL_NO.MaxLength = 64;
                this.columnTICKET_ID.MaxLength = 3000;
                this.columnDEVICE_NO.MaxLength = 64;
                this.columnERROR_MESS.MaxLength = 512;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCR_QCSETRow NewT_OCR_QCSETRow() {
                return ((T_OCR_QCSETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new T_OCR_QCSETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(T_OCR_QCSETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.T_OCR_QCSETRowChanged != null)) {
                    this.T_OCR_QCSETRowChanged(this, new T_OCR_QCSETRowChangeEvent(((T_OCR_QCSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.T_OCR_QCSETRowChanging != null)) {
                    this.T_OCR_QCSETRowChanging(this, new T_OCR_QCSETRowChangeEvent(((T_OCR_QCSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.T_OCR_QCSETRowDeleted != null)) {
                    this.T_OCR_QCSETRowDeleted(this, new T_OCR_QCSETRowChangeEvent(((T_OCR_QCSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.T_OCR_QCSETRowDeleting != null)) {
                    this.T_OCR_QCSETRowDeleting(this, new T_OCR_QCSETRowChangeEvent(((T_OCR_QCSETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveT_OCR_QCSETRow(T_OCR_QCSETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QcSet ds = new QcSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "T_OCR_QCSETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class T_OCR_QCSETRow : global::System.Data.DataRow {
            
            private T_OCR_QCSETDataTable tableT_OCR_QCSET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal T_OCR_QCSETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableT_OCR_QCSET = ((T_OCR_QCSETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WORKSET_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCR_QCSET.WORKSET_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCR_QCSET”中列“WORKSET_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.WORKSET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRVALCRANE_ID {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCR_QCSET.TRVALCRANE_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCR_QCSET”中列“TRVALCRANE_ID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.TRVALCRANE_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRVALCRANE_NO {
                get {
                    if (this.IsTRVALCRANE_NONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.TRVALCRANE_NOColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.TRVALCRANE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CONTRACTOR_CODE {
                get {
                    if (this.IsCONTRACTOR_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.CONTRACTOR_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.CONTRACTOR_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMEND_ID {
                get {
                    if (this.IsCOMMEND_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.COMMEND_IDColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.COMMEND_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRIVER_ID {
                get {
                    if (this.IsDRIVER_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.DRIVER_IDColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.DRIVER_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIP_CODE {
                get {
                    if (this.IsSHIP_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.SHIP_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.SHIP_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IN_VOYAGE_CODE {
                get {
                    if (this.IsIN_VOYAGE_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.IN_VOYAGE_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.IN_VOYAGE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUT_VOYAGE_CODE {
                get {
                    if (this.IsOUT_VOYAGE_CODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.OUT_VOYAGE_CODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.OUT_VOYAGE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BERTH_NUM {
                get {
                    if (this.IsBERTH_NUMNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.BERTH_NUMColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.BERTH_NUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VOYAGE_TYPE {
                get {
                    if (this.IsVOYAGE_TYPENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.VOYAGE_TYPEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.VOYAGE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHIPMENT_DEAL {
                get {
                    if (this.IsSHIPMENT_DEALNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.SHIPMENT_DEALColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.SHIPMENT_DEALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPERATOR_UID {
                get {
                    if (this.IsOPERATOR_UIDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.OPERATOR_UIDColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.OPERATOR_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMMEND_PAW {
                get {
                    if (this.IsCOMMEND_PAWNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.COMMEND_PAWColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.COMMEND_PAWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TERMINAL_NO {
                get {
                    if (this.IsTERMINAL_NONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.TERMINAL_NOColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.TERMINAL_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TICKET_ID {
                get {
                    if (this.IsTICKET_IDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.TICKET_IDColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.TICKET_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DEVICE_NO {
                get {
                    if (this.IsDEVICE_NONull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.DEVICE_NOColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.DEVICE_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DEVICE_TYPE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCR_QCSET.DEVICE_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCR_QCSET”中列“DEVICE_TYPE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.DEVICE_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal IS_CHANGE {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCR_QCSET.IS_CHANGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCR_QCSET”中列“IS_CHANGE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.IS_CHANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string STATUS {
                get {
                    if (this.IsSTATUSNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.STATUSColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ERROR_MESS {
                get {
                    if (this.IsERROR_MESSNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.ERROR_MESSColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.ERROR_MESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CREATE_TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCR_QCSET.CREATE_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCR_QCSET”中列“CREATE_TIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.CREATE_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPDATE_TIME {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableT_OCR_QCSET.UPDATE_TIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCR_QCSET”中列“UPDATE_TIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.UPDATE_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BERTH_WAY {
                get {
                    if (this.IsBERTH_WAYNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.BERTH_WAYColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.BERTH_WAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VESSELALIASE {
                get {
                    if (this.IsVESSELALIASENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.VESSELALIASEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.VESSELALIASEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BERTHPLANNO {
                get {
                    try {
                        return ((decimal)(this[this.tableT_OCR_QCSET.BERTHPLANNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“T_OCR_QCSET”中列“BERTHPLANNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.BERTHPLANNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AVESSELNAME {
                get {
                    if (this.IsAVESSELNAMENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.AVESSELNAMEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.AVESSELNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INAGENT {
                get {
                    if (this.IsINAGENTNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.INAGENTColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.INAGENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUTAGENT {
                get {
                    if (this.IsOUTAGENTNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.OUTAGENTColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.OUTAGENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OWNER {
                get {
                    if (this.IsOWNERNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.OWNERColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.OWNERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INVESSELLINECODE {
                get {
                    if (this.IsINVESSELLINECODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.INVESSELLINECODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.INVESSELLINECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OUTVESSELLINECODE {
                get {
                    if (this.IsOUTVESSELLINECODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.OUTVESSELLINECODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.OUTVESSELLINECODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WORKTYPE {
                get {
                    if (this.IsWORKTYPENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.WORKTYPEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.WORKTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CAMERACODE {
                get {
                    if (this.IsCAMERACODENull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableT_OCR_QCSET.CAMERACODEColumn]));
                    }
                }
                set {
                    this[this.tableT_OCR_QCSET.CAMERACODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWORKSET_IDNull() {
                return this.IsNull(this.tableT_OCR_QCSET.WORKSET_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWORKSET_IDNull() {
                this[this.tableT_OCR_QCSET.WORKSET_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRVALCRANE_IDNull() {
                return this.IsNull(this.tableT_OCR_QCSET.TRVALCRANE_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRVALCRANE_IDNull() {
                this[this.tableT_OCR_QCSET.TRVALCRANE_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRVALCRANE_NONull() {
                return this.IsNull(this.tableT_OCR_QCSET.TRVALCRANE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRVALCRANE_NONull() {
                this[this.tableT_OCR_QCSET.TRVALCRANE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCONTRACTOR_CODENull() {
                return this.IsNull(this.tableT_OCR_QCSET.CONTRACTOR_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCONTRACTOR_CODENull() {
                this[this.tableT_OCR_QCSET.CONTRACTOR_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMEND_IDNull() {
                return this.IsNull(this.tableT_OCR_QCSET.COMMEND_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMEND_IDNull() {
                this[this.tableT_OCR_QCSET.COMMEND_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRIVER_IDNull() {
                return this.IsNull(this.tableT_OCR_QCSET.DRIVER_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRIVER_IDNull() {
                this[this.tableT_OCR_QCSET.DRIVER_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIP_CODENull() {
                return this.IsNull(this.tableT_OCR_QCSET.SHIP_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIP_CODENull() {
                this[this.tableT_OCR_QCSET.SHIP_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIN_VOYAGE_CODENull() {
                return this.IsNull(this.tableT_OCR_QCSET.IN_VOYAGE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIN_VOYAGE_CODENull() {
                this[this.tableT_OCR_QCSET.IN_VOYAGE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUT_VOYAGE_CODENull() {
                return this.IsNull(this.tableT_OCR_QCSET.OUT_VOYAGE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUT_VOYAGE_CODENull() {
                this[this.tableT_OCR_QCSET.OUT_VOYAGE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBERTH_NUMNull() {
                return this.IsNull(this.tableT_OCR_QCSET.BERTH_NUMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBERTH_NUMNull() {
                this[this.tableT_OCR_QCSET.BERTH_NUMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVOYAGE_TYPENull() {
                return this.IsNull(this.tableT_OCR_QCSET.VOYAGE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVOYAGE_TYPENull() {
                this[this.tableT_OCR_QCSET.VOYAGE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHIPMENT_DEALNull() {
                return this.IsNull(this.tableT_OCR_QCSET.SHIPMENT_DEALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHIPMENT_DEALNull() {
                this[this.tableT_OCR_QCSET.SHIPMENT_DEALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPERATOR_UIDNull() {
                return this.IsNull(this.tableT_OCR_QCSET.OPERATOR_UIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPERATOR_UIDNull() {
                this[this.tableT_OCR_QCSET.OPERATOR_UIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMMEND_PAWNull() {
                return this.IsNull(this.tableT_OCR_QCSET.COMMEND_PAWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMMEND_PAWNull() {
                this[this.tableT_OCR_QCSET.COMMEND_PAWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTERMINAL_NONull() {
                return this.IsNull(this.tableT_OCR_QCSET.TERMINAL_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTERMINAL_NONull() {
                this[this.tableT_OCR_QCSET.TERMINAL_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTICKET_IDNull() {
                return this.IsNull(this.tableT_OCR_QCSET.TICKET_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTICKET_IDNull() {
                this[this.tableT_OCR_QCSET.TICKET_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEVICE_NONull() {
                return this.IsNull(this.tableT_OCR_QCSET.DEVICE_NOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEVICE_NONull() {
                this[this.tableT_OCR_QCSET.DEVICE_NOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDEVICE_TYPENull() {
                return this.IsNull(this.tableT_OCR_QCSET.DEVICE_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDEVICE_TYPENull() {
                this[this.tableT_OCR_QCSET.DEVICE_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIS_CHANGENull() {
                return this.IsNull(this.tableT_OCR_QCSET.IS_CHANGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIS_CHANGENull() {
                this[this.tableT_OCR_QCSET.IS_CHANGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSTATUSNull() {
                return this.IsNull(this.tableT_OCR_QCSET.STATUSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSTATUSNull() {
                this[this.tableT_OCR_QCSET.STATUSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsERROR_MESSNull() {
                return this.IsNull(this.tableT_OCR_QCSET.ERROR_MESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetERROR_MESSNull() {
                this[this.tableT_OCR_QCSET.ERROR_MESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCREATE_TIMENull() {
                return this.IsNull(this.tableT_OCR_QCSET.CREATE_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCREATE_TIMENull() {
                this[this.tableT_OCR_QCSET.CREATE_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPDATE_TIMENull() {
                return this.IsNull(this.tableT_OCR_QCSET.UPDATE_TIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPDATE_TIMENull() {
                this[this.tableT_OCR_QCSET.UPDATE_TIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBERTH_WAYNull() {
                return this.IsNull(this.tableT_OCR_QCSET.BERTH_WAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBERTH_WAYNull() {
                this[this.tableT_OCR_QCSET.BERTH_WAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVESSELALIASENull() {
                return this.IsNull(this.tableT_OCR_QCSET.VESSELALIASEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVESSELALIASENull() {
                this[this.tableT_OCR_QCSET.VESSELALIASEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBERTHPLANNONull() {
                return this.IsNull(this.tableT_OCR_QCSET.BERTHPLANNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBERTHPLANNONull() {
                this[this.tableT_OCR_QCSET.BERTHPLANNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAVESSELNAMENull() {
                return this.IsNull(this.tableT_OCR_QCSET.AVESSELNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAVESSELNAMENull() {
                this[this.tableT_OCR_QCSET.AVESSELNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINAGENTNull() {
                return this.IsNull(this.tableT_OCR_QCSET.INAGENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINAGENTNull() {
                this[this.tableT_OCR_QCSET.INAGENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUTAGENTNull() {
                return this.IsNull(this.tableT_OCR_QCSET.OUTAGENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUTAGENTNull() {
                this[this.tableT_OCR_QCSET.OUTAGENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOWNERNull() {
                return this.IsNull(this.tableT_OCR_QCSET.OWNERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOWNERNull() {
                this[this.tableT_OCR_QCSET.OWNERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINVESSELLINECODENull() {
                return this.IsNull(this.tableT_OCR_QCSET.INVESSELLINECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINVESSELLINECODENull() {
                this[this.tableT_OCR_QCSET.INVESSELLINECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOUTVESSELLINECODENull() {
                return this.IsNull(this.tableT_OCR_QCSET.OUTVESSELLINECODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOUTVESSELLINECODENull() {
                this[this.tableT_OCR_QCSET.OUTVESSELLINECODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWORKTYPENull() {
                return this.IsNull(this.tableT_OCR_QCSET.WORKTYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWORKTYPENull() {
                this[this.tableT_OCR_QCSET.WORKTYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAMERACODENull() {
                return this.IsNull(this.tableT_OCR_QCSET.CAMERACODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAMERACODENull() {
                this[this.tableT_OCR_QCSET.CAMERACODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class T_OCR_QCSETRowChangeEvent : global::System.EventArgs {
            
            private T_OCR_QCSETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCR_QCSETRowChangeEvent(T_OCR_QCSETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public T_OCR_QCSETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591