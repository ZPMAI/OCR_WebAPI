//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.42 版自动生成。
// 
#pragma warning disable 1591

namespace CCT.WebReference.CtosContainer {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ContainerSoap", Namespace="http://tempuri.org/")]
    public partial class Container : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ContainerDamageManageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmDischargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmLoadOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveContainersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ContainerUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Container() {
            this.Url = global::CCT.WebReference.Properties.Settings.Default.CCT_WebReference_CtosContainer_Container;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ContainerDamageManageCompletedEventHandler ContainerDamageManageCompleted;
        
        /// <remarks/>
        public event ConfirmDischargeCompletedEventHandler ConfirmDischargeCompleted;
        
        /// <remarks/>
        public event ConfirmLoadCompletedEventHandler ConfirmLoadCompleted;
        
        /// <remarks/>
        public event MoveContainersCompletedEventHandler MoveContainersCompleted;
        
        /// <remarks/>
        public event ContainerUpdateCompletedEventHandler ContainerUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContainerDamageManage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ContainerDamageManage(ref System.Data.DataSet containers, out string errorMessage) {
            object[] results = this.Invoke("ContainerDamageManage", new object[] {
                        containers});
            containers = ((System.Data.DataSet)(results[1]));
            errorMessage = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ContainerDamageManageAsync(System.Data.DataSet containers) {
            this.ContainerDamageManageAsync(containers, null);
        }
        
        /// <remarks/>
        public void ContainerDamageManageAsync(System.Data.DataSet containers, object userState) {
            if ((this.ContainerDamageManageOperationCompleted == null)) {
                this.ContainerDamageManageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContainerDamageManageOperationCompleted);
            }
            this.InvokeAsync("ContainerDamageManage", new object[] {
                        containers}, this.ContainerDamageManageOperationCompleted, userState);
        }
        
        private void OnContainerDamageManageOperationCompleted(object arg) {
            if ((this.ContainerDamageManageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContainerDamageManageCompleted(this, new ContainerDamageManageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmDischarge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ConfirmDischarge(ref System.Data.DataSet containers, out string errorMessage) {
            object[] results = this.Invoke("ConfirmDischarge", new object[] {
                        containers});
            containers = ((System.Data.DataSet)(results[1]));
            errorMessage = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmDischargeAsync(System.Data.DataSet containers) {
            this.ConfirmDischargeAsync(containers, null);
        }
        
        /// <remarks/>
        public void ConfirmDischargeAsync(System.Data.DataSet containers, object userState) {
            if ((this.ConfirmDischargeOperationCompleted == null)) {
                this.ConfirmDischargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmDischargeOperationCompleted);
            }
            this.InvokeAsync("ConfirmDischarge", new object[] {
                        containers}, this.ConfirmDischargeOperationCompleted, userState);
        }
        
        private void OnConfirmDischargeOperationCompleted(object arg) {
            if ((this.ConfirmDischargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmDischargeCompleted(this, new ConfirmDischargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmLoad", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ConfirmLoad(ref System.Data.DataSet containers, out string errorMessage) {
            object[] results = this.Invoke("ConfirmLoad", new object[] {
                        containers});
            containers = ((System.Data.DataSet)(results[1]));
            errorMessage = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmLoadAsync(System.Data.DataSet containers) {
            this.ConfirmLoadAsync(containers, null);
        }
        
        /// <remarks/>
        public void ConfirmLoadAsync(System.Data.DataSet containers, object userState) {
            if ((this.ConfirmLoadOperationCompleted == null)) {
                this.ConfirmLoadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmLoadOperationCompleted);
            }
            this.InvokeAsync("ConfirmLoad", new object[] {
                        containers}, this.ConfirmLoadOperationCompleted, userState);
        }
        
        private void OnConfirmLoadOperationCompleted(object arg) {
            if ((this.ConfirmLoadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmLoadCompleted(this, new ConfirmLoadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoveContainers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long MoveContainers(ref System.Data.DataSet containers, out string errorMessage) {
            object[] results = this.Invoke("MoveContainers", new object[] {
                        containers});
            containers = ((System.Data.DataSet)(results[1]));
            errorMessage = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void MoveContainersAsync(System.Data.DataSet containers) {
            this.MoveContainersAsync(containers, null);
        }
        
        /// <remarks/>
        public void MoveContainersAsync(System.Data.DataSet containers, object userState) {
            if ((this.MoveContainersOperationCompleted == null)) {
                this.MoveContainersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveContainersOperationCompleted);
            }
            this.InvokeAsync("MoveContainers", new object[] {
                        containers}, this.MoveContainersOperationCompleted, userState);
        }
        
        private void OnMoveContainersOperationCompleted(object arg) {
            if ((this.MoveContainersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveContainersCompleted(this, new MoveContainersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ContainerUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long ContainerUpdate(ref System.Data.DataSet containers, out string errorMessage) {
            object[] results = this.Invoke("ContainerUpdate", new object[] {
                        containers});
            containers = ((System.Data.DataSet)(results[1]));
            errorMessage = ((string)(results[2]));
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void ContainerUpdateAsync(System.Data.DataSet containers) {
            this.ContainerUpdateAsync(containers, null);
        }
        
        /// <remarks/>
        public void ContainerUpdateAsync(System.Data.DataSet containers, object userState) {
            if ((this.ContainerUpdateOperationCompleted == null)) {
                this.ContainerUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnContainerUpdateOperationCompleted);
            }
            this.InvokeAsync("ContainerUpdate", new object[] {
                        containers}, this.ContainerUpdateOperationCompleted, userState);
        }
        
        private void OnContainerUpdateOperationCompleted(object arg) {
            if ((this.ContainerUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ContainerUpdateCompleted(this, new ContainerUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void ContainerDamageManageCompletedEventHandler(object sender, ContainerDamageManageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerDamageManageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContainerDamageManageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet containers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void ConfirmDischargeCompletedEventHandler(object sender, ConfirmDischargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmDischargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmDischargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet containers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void ConfirmLoadCompletedEventHandler(object sender, ConfirmLoadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmLoadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmLoadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet containers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void MoveContainersCompletedEventHandler(object sender, MoveContainersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoveContainersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoveContainersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet containers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void ContainerUpdateCompletedEventHandler(object sender, ContainerUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ContainerUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ContainerUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Data.DataSet containers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string errorMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}

#pragma warning restore 1591